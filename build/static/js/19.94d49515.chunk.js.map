{"version":3,"sources":["views/pages/login/Login.js","views/modals/Modals.js"],"names":["Login","authenticated","login","location","useState","id","setId","pwd","setPwd","useCookies","setCookie","mode","msg","color","warning","setModal","handleClick","a","console","log","process","axios","get","res","post","userId","password","userIp","data","ip","then","response","status","company","token","CryptoJS","AES","encrypt","JSON","stringify","toString","username","grade","vendorId","companyId","csId","path","maxAge","UTIL","catch","err","state","from","pathname","window","className","fnc","md","name","type","value","onChange","target","placeholder","autoComplete","xs","onClick","Modals","props","setWarning","ermsg","setErmsg","useEffect","show","onClose","closeButton","style","textAlign","paddingTop","paddingBottom","dangerouslySetInnerHTML","__html","delClick"],"mappings":"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","file":"static/js/19.94d49515.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport axios from 'axios'\r\nimport cookie, { useCookies } from 'react-cookie'\r\nimport * as UTIL from '../../../util/Fnc'\r\nimport MODAL from '../../modals/Modals'\r\nimport CryptoJS from \"crypto-js\"\r\n\r\n\r\nconst Login = ({ authenticated, login, location }) => {\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n  const [cookies, setCookie, removeCookie] = useCookies(['token']);\r\n  const [warning, setModal] = useState({ mode: false, msg: \"\", color: \"info\" });\r\n\r\n  // login 로그인\r\n\r\n  const handleClick = async () => {\r\n    console.log(\"result12\", process.env.REACT_APP_JWT_EXPIRY_TIME)\r\n    console.log(\"result12\", process.env.REACT_APP_ENCRYPT_KEY)\r\n    const res = await axios.get('https://api.ipify.org?format=json')\r\n    await axios.post(process.env.REACT_APP_APISERVER + \"/api/auth/weblogin/\", { userId: id, password: pwd, userIp: res.data.ip }).then(function (response) {\r\n      console.log(\"result\", response.data.status)\r\n      if (response.data.status === 1) {\r\n        const company = response.data.data.company;\r\n        const token = response.data.data.token;\r\n        var userId = CryptoJS.AES.encrypt(JSON.stringify(response.data.data.userId), process.env.REACT_APP_ENCRYPT_KEY).toString();\r\n        var username = CryptoJS.AES.encrypt(JSON.stringify(response.data.data.username), process.env.REACT_APP_ENCRYPT_KEY).toString();\r\n        var grade = CryptoJS.AES.encrypt(JSON.stringify(response.data.data.grade), process.env.REACT_APP_ENCRYPT_KEY).toString();\r\n        var vendorId = CryptoJS.AES.encrypt(JSON.stringify(response.data.data.companyId), process.env.REACT_APP_ENCRYPT_KEY).toString();\r\n        var csId = CryptoJS.AES.encrypt(JSON.stringify(response.data.data.csId), process.env.REACT_APP_ENCRYPT_KEY).toString();\r\n\r\n        setCookie('TocToken', response.data.data.token, { path: '/', maxAge: process.env.REACT_APP_JWT_EXPIRY_TIME });\r\n        setCookie('TocData1', userId, { path: '/', maxAge: process.env.REACT_APP_JWT_EXPIRY_TIME });\r\n        setCookie('TocData2', username, { path: '/', maxAge: process.env.REACT_APP_JWT_EXPIRY_TIME });\r\n        setCookie('TocData3', grade, { path: '/', maxAge: process.env.REACT_APP_JWT_EXPIRY_TIME });\r\n        setCookie('TocData4', vendorId, { path: '/', maxAge: process.env.REACT_APP_JWT_EXPIRY_TIME });\r\n        setCookie('TocData5', csId, { path: '/', maxAge: process.env.REACT_APP_JWT_EXPIRY_TIME });\r\n        login({ userId, token });\r\n      } else {\r\n        setModal(UTIL.modalopen('입력한 정보가 정확하지 않습니다', 'danger'))\r\n      }\r\n    }).catch(function (err) {\r\n      //console.log(err)\r\n      setModal(UTIL.modalopen('<span style=\"font-size:20px;\"><b>로그인 오류1</b>' + JSON.stringify(err) + '</span>', 'danger'))\r\n      setId(\"\");\r\n      setPwd(\"\");\r\n    })\r\n  }\r\n\r\n  const closemodal = () => {\r\n    setModal(false);\r\n  }\r\n  const { from } = location.state || { from: { pathname: \"/\" } }\r\n  if (authenticated) window.location = \"/dashboard\"//<Redirect to=\"/\" />\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <MODAL data={warning} fnc={closemodal}></MODAL>\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"8\">\r\n            <CCardGroup>\r\n              <CCard className=\"p-4\">\r\n                <CCardBody>\r\n                  <CForm id=\"frmname\">\r\n                    <h1>Login</h1>\r\n                    <p className=\"text-muted\">로그인해주세요</p>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-user\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" value={id} onChange={({ target: { value } }) => setId(value)} placeholder=\"ID\" autoComplete=\"account\" />\r\n                    </CInputGroup>\r\n                    <CInputGroup className=\"mb-4\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-lock-locked\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"password\" value={pwd} onChange={({ target: { value } }) => setPwd(value)} placeholder=\"Password\" autoComplete=\"current-password\" />\r\n                    </CInputGroup>\r\n                    <CRow>\r\n                      <CCol xs=\"6\">\r\n                        <CButton color=\"primary\" onClick={handleClick} className=\"px-4\">Login</CButton>\r\n                      </CCol>\r\n                      <CCol xs=\"6\" className=\"text-right\">\r\n\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CForm>\r\n                </CCardBody>\r\n              </CCard>\r\n\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow\r\n} from '@coreui/react'\r\n\r\n\r\nconst Modals = (props) => {\r\n\r\n  const [modal, setModal] = useState(true)\r\n  const [large, setLarge] = useState(false)\r\n  const [small, setSmall] = useState(false)\r\n  const [primary, setPrimary] = useState(false)\r\n  const [success, setSuccess] = useState(false)\r\n  const [warning, setWarning] = useState(false)\r\n  const [danger, setDanger] = useState(false)\r\n  const [info, setInfo] = useState(false)\r\n  const [ermsg, setErmsg] = useState(\"Error !!\")\r\n  useEffect(() => {\r\n    if (props.data.mode === true) {\r\n      setWarning(!warning);\r\n    } else {\r\n      setWarning(warning);\r\n    }\r\n    setErmsg(\"<div style='padding-top:20px;'><span>\" + props.data.msg + \"</span></div>\")\r\n  }, [props]);\r\n\r\n  const setClose = () => {\r\n    props.fnc(false);\r\n    setWarning(!warning);\r\n  }\r\n\r\n  return (\r\n    <CModal\r\n      show={warning}\r\n      onClose={() => setWarning(!warning)}\r\n      color={props.data.color}\r\n    >\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>TOC System POPUP</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody id=\"txtmsg\" style={{ textAlign: 'center', paddingTop: \"30px\", paddingBottom: \"30px\" }} dangerouslySetInnerHTML={{ __html: ermsg }}>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        {props.mode === \"save\" && <CButton id=\"btn_modal_save\" color=\"warning\" onClick={() => props.handleClick()}>저장</CButton>}\r\n        {props.mode === \"del\" && <CButton id=\"btn_modal_del\" color=\"warning\" onClick={() => props.delClick()}>삭제</CButton>}\r\n        <CButton color=\"secondary\" onClick={() => setClose()}>닫기</CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n\r\n  )\r\n}\r\n\r\nexport default Modals"],"sourceRoot":""}