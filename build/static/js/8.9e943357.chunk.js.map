{"version":3,"sources":["views/contents/Manager.js","views/modals/Modals.js","reusable/CommonAxios.js"],"names":["moment","require","defaultValue","_id","username","userId","phone","email","grade","status","password","Manager","fields1","key","_classes","isMobile","fields2","useCookies","cookies","configHeader","headers","Authorization","TocToken","useState","mode","msg","color","warning","setModal","GV","vendorTablepagesize","pagesize","fields","setFields","logfield1","fields4","setMode","data","setData","detaildata","setDetailData","vendordata","setVendorData","vendorIdvalue","setVendorIdvalue","gradevalue","setGradevalue","items","setItems","setLoading","logdata","setLogData","page","setPages","itemsPerPage","columnFilterValue","tableFilterValue","sorterValue","csdata1","setCsData1","fetchTrigger","setFetchTrigger","csIdvalue","setCsIdvalue","setCsIdvalue1","csdata","setCsData","UTIL","userinfo","params","JSON","stringify","query","URLSearchParams","toString","useEffect","listdata","axios","post","process","then","result","docs","totalPages","catch","err","setTimeout","change4","change3","getList","handleClick","a","url","$","val","frmstruserId","frmstrvendorId","frmstrcsId","frmstrpassword","frmstrusername","frmstrgrade","frmstrpermission","frmstrphone","frmstremail","frmstatus","sendinfcreate","companyId","csId","permission","offdate","closemodal","change15","text","errmsg","hide","e","target","value","vendorid","setTableClose","change","change2","vendorId","alert","fnc","id","style","width","position","float","paddingBottom","block","onClick","show","reset","fadeOut","name","metghod","custom","onChange","map","item","index","companyName","csName","type","maxLength","placeholder","readOnly","csid","onRowClick","select","fadeIn","getDetail","scopedSlots","companyname","className","padding","fontSize","display","disabled","createdAt","format","updateModal","size","hover","sorter","pagination","ipAddress","state","log","doctype","overflow","whiteSpace","textOverflow","inputdata","action","method","change13","changeGrade","txt","Modals","props","setWarning","ermsg","setErmsg","onClose","closeButton","textAlign","paddingTop","dangerouslySetInnerHTML","__html","delClick","ManagerGrade","SetGradeTxt","gradetxt"],"mappings":"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","file":"static/js/8.9e943357.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CButton,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CSelect,\r\n} from '@coreui/react'\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\nimport * as UTIL from 'src/util/Fnc'\r\nimport { useCookies } from 'react-cookie';\r\nimport MODAL from '../modals/Modals';\r\nimport GV from '../../globalSet'\r\nimport { isMobile } from 'react-device-detect';\r\nimport { ManagerGrade, SetGradeTxt } from 'src/reusable/CommonAxios'\r\nconst moment = require('moment');\r\n\r\nconst defaultValue = [{ _id: \"\", username: \"\", userId: \"\", phone: \"\", email: \"\", grade: \"\", status: 1, password: \"\" }];\r\nconst Manager = () => {\r\n\r\n  // 페이지내 글로벌 변수 정의  START:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\r\n  var fields1 = [{ key: '이름', _classes: 'Tablefirst' }, { key: '사용자ID', _classes: 'Tablefirst' }, { key: '운수사', _classes: 'Tablefirst' }, { key: '연락처', _classes: 'Tablefirst' }, { key: '권한', _classes: 'Tablefirst' }, { key: '상태', _classes: 'Tablefirst' }]\r\n  if (isMobile) { fields1 = [{ key: '이름', _classes: 'Tablefirst' }, { key: '업체코드', _classes: 'Tablefirst' }, { key: '권한', _classes: 'Tablefirst' }] }\r\n  var fields2 = [{ key: '이름', _classes: 'Tablefirst' }, { key: '사용자ID', _classes: 'Tablefirst' }, { key: '운수사', _classes: 'Tablefirst' }]\r\n  if (isMobile) { fields2 = [{ key: '이름', _classes: 'Tablefirst' }, { key: '업체코드', _classes: 'Tablefirst' }, { key: '권한', _classes: 'Tablefirst' }] }\r\n  var fields3 = [{ key: '로그인IP', _classes: 'Tablefirst' }, { key: '로그인 일시', _classes: 'Tablefirst' }, { key: '상태', _classes: 'Tablefirst' }]\r\n  var logfield = [{ key: '로그 타입', _classes: 'Tablefirst' }, { key: '로그 일시', _classes: 'Tablefirst' }, { key: '입력값', _classes: 'Tablefirst' }, { key: '메세지', _classes: 'Tablefirst' },]\r\n  const [cookies] = useCookies(['token']);  //Auth    \r\n  const configHeader = { headers: { Authorization: `Bearer ${cookies.TocToken}` } } // axios 전송을 위한 헤더값 세팅\r\n  const [warning, setModal] = useState({ mode: false, msg: \"\", color: \"info\" });    // 모달 팝업용\r\n  const [pagesize, setPageSize] = useState(GV.vendorTablepagesize);\r\n  const [fields, setFields] = useState(fields1)\r\n  const [logfield1, setlogfield] = useState(logfield)\r\n  const [fields4, setFields3] = useState(fields3)\r\n  const [mode, setMode] = useState(\"alert\");\r\n\r\n  // 페이지내 글로벌 변수 정의  END :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\r\n  const [data, setData] = useState([]);\r\n  const [detaildata, setDetailData] = useState(defaultValue);\r\n  const [vendordata, setVendorData] = useState([]);\r\n  const [vendorIdvalue, setVendorIdvalue] = useState(\"\");   // 사용자 추가시 벤더아이디 설정 \r\n  const [gradevalue, setGradevalue] = useState(\"\");   // 사용자 추가시 권한 설정\r\n\r\n  // 라이브 페이징을 위한 정의  START\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [logdata, setLogData] = useState([])\r\n  const [page, setPage] = useState(1);\r\n  const [pages, setPages] = useState(5);\r\n  const [itemsPerPage, setItemsPerPage] = useState(5);\r\n  const [columnFilterValue, setColumnFilterValue] = useState();\r\n  const [tableFilterValue, setTableFilterValue] = useState(\"\");\r\n  const [sorterValue, setSorterValue] = useState();\r\n  const [csdata1, setCsData1] = useState([]);\r\n  const [fetchTrigger, setFetchTrigger] = useState(0);\r\n  const [csIdvalue, setCsIdvalue] = useState(\"\");   // 사용자 추가시 벤더아이디 설정 \r\n  const [csIdvalue1, setCsIdvalue1] = useState(\"\");   // 사용자 추가시 벤더아이디 설정 \r\n  const [csdata, setCsData] = useState([]);\r\n  const [userinfo] = useState(UTIL.getUserInfo(cookies))\r\n  const params = {\r\n    page,\r\n    columnFilterValue: JSON.stringify(columnFilterValue),\r\n    tableFilterValue,\r\n    sorterValue: JSON.stringify(sorterValue),\r\n    itemsPerPage\r\n  };\r\n  // 라이브 페이징을 위한 정의  END\r\n  const query = new URLSearchParams(params).toString();\r\n  useEffect(() => {\r\n    if (userinfo.grade === \"0\") {\r\n      let listdata = { status: 1, params: params }  // 리스트 출력 기본 세팅값 정의 \r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/managerlist\", listdata, configHeader).then(result => {\r\n        setItems(result.data.data.docs);\r\n        setPages(result.data.data.totalPages);\r\n        setLoading(false);\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n        setTimeout(() => {\r\n          setFetchTrigger(fetchTrigger + 1);\r\n        }, 2000);\r\n      });\r\n    } else {\r\n      change4();\r\n      change3();\r\n    }\r\n\r\n  }, [query, fetchTrigger]);\r\n\r\n\r\n  // 사용자 리스트 호출 함수 \r\n  const getList = () => {\r\n    let listdata = { status: 1, params: params }  // 리스트 출력 기본 세팅값 정의 \r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/managerlist\", listdata, configHeader).then(result => {\r\n      setItems(result.data.data.docs);\r\n      setPages(result.data.data.totalPages);\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    });\r\n  }\r\n\r\n  //d운수사 리스트\r\n  useEffect(() => {\r\n    let listdata = { status: 1, pagesize: pagesize }  // 리스트 출력 기본 세팅값 정의 \r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/vendorlist\", listdata, configHeader).then(result => {\r\n      setVendorData(result.data.data)\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }, [])\r\n\r\n  // 운수사 상세정보 호출 함수\r\n  const getDetail = (_id, userId) => {\r\n    closemodal();\r\n    $(\"#insert\").hide()\r\n    $(\"#detail\").show()\r\n    $(\"#frmadd\")[0].reset();\r\n    change();\r\n    setFields(fields2);\r\n    let listdata = { _id: _id }\r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/managerdetail\", listdata, configHeader).then(result => {\r\n      setDetailData(result.data.data);\r\n      setVendorIdvalue(result.data.data[0].companyId)\r\n      setGradevalue(result.data.data[0].grade)\r\n      setCsIdvalue(result.data.data[0].csId)\r\n      setCsIdvalue1(result.data.data[0].csId)\r\n\r\n      let select = { userId: userId, pagesize: pagesize }  // 리스트 출력 기본 세팅값 정의\r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_report/logindetail\", select, configHeader).then(result => {\r\n        setData(result.data.data)\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      });\r\n\r\n\r\n\r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_report/loghistory\", select, configHeader).then(result => {\r\n\r\n        setLogData(result.data.data)\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      });\r\n      // 상세정보 호출시 입력화면에 쓰기 및 애니메이션 처리  ---------\r\n      UTIL.writeani('open')\r\n      $(\"#dateview\").fadeIn();\r\n      // 상세정보 호출시 입력화면에 쓰기 및 애니메이션 처리  ---------\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    });\r\n\r\n\r\n  }\r\n\r\n  const updateModal = (_id) => {\r\n    closemodal();\r\n    $(\"#detail\").hide()\r\n    $(\"#insert\").show();\r\n    setFields(fields2);\r\n    $(\"#frmadd\")[0].reset();\r\n    let listdata = { _id: _id }\r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/managerdetail\", listdata, configHeader).then(result => {\r\n      setDetailData(result.data.data);\r\n      setVendorIdvalue(result.data.data[0].vendorId)\r\n      setGradevalue(result.data.data[0].grade)\r\n      setCsIdvalue(result.data.data[0].csId)\r\n      setCsIdvalue1(result.data.data[0].csId)\r\n      // 상세정보 호출시 입력화면에 쓰기 및 애니메이션 처리  ---------\r\n      UTIL.writeani('open')\r\n      $(\"#dateview\").fadeIn();\r\n      // 상세정보 호출시 입력화면에 쓰기 및 애니메이션 처리  ---------\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    });\r\n  }\r\n\r\n\r\n  const handleClick = async () => {\r\n\r\n    let txt = \"\";\r\n    let url = \"/api/pages/updatmanager\";\r\n\r\n    if ($('#frmadd [name=\"id\"]').val()) {\r\n      txt = \"수정\";\r\n      url = \"/api/pages/updatemanager/\" + $('#frmadd [name=\"id\"]').val();\r\n    } else {\r\n      txt = \"등록\";\r\n      url = \"/api/pages/insertmanager\";\r\n    }\r\n\r\n    let frmstruserId = $('#frmadd [name=\"userId\"]').val();\r\n    let frmstrvendorId = $('#frmadd [name=\"companyId1\"]').val();\r\n    let frmstrcsId = $('#frmadd [name=\"csId1\"]').val();\r\n    let frmstrpassword = $('#frmadd [name=\"password\"]').val();\r\n    let frmstrusername = $('#frmadd [name=\"username\"]').val();\r\n    let frmstrgrade = $('#frmadd [name=\"grade\"]').val();\r\n    let frmstrpermission = $('#frmadd [name=\"permission\"]').val();\r\n    let frmstrphone = $('#frmadd [name=\"phone\"]').val();\r\n    let frmstremail = $('#frmadd [name=\"email\"]').val();\r\n    let frmstatus = $('#frmadd [name=\"status\"]').val();\r\n\r\n    let sendinfcreate = {\r\n      companyId: frmstrvendorId,\r\n      csId: frmstrcsId,\r\n      userId: frmstruserId,\r\n      password: frmstrpassword,\r\n      grade: frmstrgrade,\r\n      permission: frmstrpermission,\r\n      username: frmstrusername,\r\n      email: frmstremail,\r\n      phone: frmstrphone,\r\n      offdate: \"\",\r\n      status: frmstatus,\r\n      pagesize: GV.vendorTablepagesize\r\n    }\r\n\r\n    axios.post(process.env.REACT_APP_APISERVER + url, sendinfcreate, configHeader).then(result => {\r\n      if (result.data.status === 1) {\r\n        let companyId12 = $('#schform [name=\"vendorId\"]').val();\r\n        if (companyId12 == 0) {\r\n          getList();\r\n          setFields(fields1);\r\n          UTIL.writeani('close')\r\n          closemodal()\r\n        } else {\r\n          setFields(fields1);\r\n          UTIL.writeani('close')\r\n          closemodal();\r\n          change15();\r\n        }\r\n      } else {\r\n\r\n        if (result.data.status === 9) {\r\n          $(\"#txtmsg\").text(JSON.stringify(result.data.errmsg[0].msg))\r\n          $(\"#btn_modal_save\").hide();\r\n        } else {\r\n          $(\"#txtmsg\").text(\"등록실패\")\r\n          $(\"#btn_modal_save\").hide();\r\n        }\r\n      }\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n  const change4 = (e) => {\r\n    if (userinfo.grade === \"0\") {\r\n      setVendorIdvalue(e.target.value)\r\n      let listdata = { status: 1, pagesize: pagesize, companyId: e.target.value }  // 리스트 출력 기본 세팅값 정의\r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n        setCsData(result.data.data)\r\n\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      })\r\n    } else {\r\n      let listdata = { status: 1, pagesize: pagesize, companyId: userinfo.vendorid }  // 리스트 출력 기본 세팅값 정의 \r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n        setCsData(result.data.data)\r\n\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const openmodal = () => {\r\n    let txt = \"\";\r\n    setMode('save');\r\n    $(\"#btn_modal_save\").show();\r\n    if ($('#frmadd [name=\"id\"]').val()) { txt = \"수정\"; } else { txt = \"등록\"; }\r\n    setModal(UTIL.modalopen('사용자 정보를 ' + txt + '하시겠습니까?', 'danger'))\r\n  }\r\n  const closemodal = () => {\r\n    setModal(false);\r\n  }\r\n  // 입력폼 표시 애니메이션 처리\r\n  const setTableOpen = () => {\r\n    $(\"#detail\").hide()\r\n    $(\"#insert\").show();\r\n    $(\"#frmadd\")[0].reset();\r\n    setDetailData(defaultValue)\r\n    $(\"#frmadd input\").val(\"\");\r\n    $(\"#dateview\").fadeOut();\r\n    setModal(false);\r\n    setFields(fields2);\r\n    if (userinfo.grade != \"0\") {\r\n      change4();\r\n    }\r\n    UTIL.writeani('open')\r\n  }\r\n\r\n\r\n  // 입력폼 닫기 애니메이션 처리\r\n  const setTableClose = () => {\r\n    closemodal();\r\n    setDetailData(defaultValue)\r\n    UTIL.writeani('close')\r\n    setFields(fields1);\r\n    if (userinfo.grade != \"0\") {\r\n      change4();\r\n    }\r\n  }\r\n\r\n  const change13 = (e) => {\r\n    setVendorIdvalue(e.target.value)\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: e.target.value }   // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n      setCsData1(result.data.data)\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n  const change = (e) => {\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: vendorIdvalue }  // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n      setCsData1(result.data.data)\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n  const change2 = (e) => {\r\n    setCsIdvalue(e.target.value)\r\n    setCsIdvalue1(e.target.value)\r\n  }\r\n\r\n  const changeGrade = (e) => { setGradevalue(e.target.value) }  // 권한 선택시 state 변경\r\n\r\n\r\n  const change15 = () => {\r\n    let url = \"/api/pages/userselect\";\r\n\r\n    let vendorId = $('#schform [name=\"vendorId\"]').val();\r\n    let csId = $('#schform [name=\"csId\"]').val();\r\n\r\n    if (vendorId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 충전소를 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    if (csId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 검색 시작일과 종료일을 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: vendorId, csId: csId }  // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + url, listdata, configHeader).then(result => {\r\n      setItems(result.data.data.docs);\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  const change3 = (e) => {\r\n    if (userinfo.grade === \"0\") {\r\n      setCsIdvalue(e.target.value)\r\n    }\r\n\r\n    let txt = \"\";\r\n    let url = \"/api/pages/userselect\";\r\n\r\n    let vendorId = $('#schform [name=\"vendorId\"]').val();\r\n    let csId = $('#schform [name=\"csId\"]').val();\r\n\r\n    if (vendorId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 충전소를 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    if (csId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 검색 시작일과 종료일을 반드시 선택해주세요');\r\n      return;\r\n    }\r\n    UTIL.writeani('close')\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: vendorId, csId: csId }  // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + url, listdata, configHeader).then(result => {\r\n      setItems(result.data.data.docs);\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol>\r\n          <MODAL data={warning} fnc={closemodal} mode={mode} handleClick={handleClick}></MODAL>\r\n          <CRow>\r\n\r\n            <CCard id=\"listtable2\" style={{ width: \"100%\", position: \"relative\", float: \"left\" }}>\r\n              <CCardHeader>\r\n                사용자리스트\r\n                <div style={{ paddingBottom: \"5px\", float: \"right\" }}>\r\n                  <CButton block color=\"info\" onClick={setTableOpen}>사용자등록</CButton>\r\n                </div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                {userinfo.grade === \"0\" &&\r\n                  <form name=\"schform\" id=\"schform\" metghod=\"post\">\r\n                    <div style={{ paddingBottom: \"5px\", float: \"left\" }}>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 운수사</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"select\" id=\"vendorId\" defaultValue={vendorIdvalue} onChange={e => change4(e)} name=\"vendorId\" >\r\n                          <option value=\"0\" > 운수사 선택 </option>\r\n                          {\r\n                            vendordata.map((item, index) => {\r\n\r\n                              return (\r\n                                <option value={item.companyId}>{item.companyName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 충전소</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"csId\" id=\"csId\" defaultValue={csIdvalue} onChange={e => change3(e)}>\r\n                          <option value=\"0\" >::: 선택하세요::: </option>\r\n                          {\r\n                            csdata.map((item, index) => {\r\n                              return (\r\n                                <option value={item.csId}>[{item.companyId}]- {item.csName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                      </CInputGroup>\r\n                    </div>\r\n                  </form>\r\n                }\r\n\r\n\r\n                {userinfo.grade === \"2\" &&\r\n                  <form name=\"schform\" id=\"schform\" metghod=\"post\">\r\n                    <div style={{ paddingBottom: \"5px\", float: \"left\" }}>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 운수사</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"companyId\" maxLength=\"5\" name=\"vendorId\" value={userinfo.vendorid} placeholder=\"\" readOnly />\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 충전소</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"csId\" id=\"csId\" defaultValue={csIdvalue} onChange={e => change3(e)}>\r\n                          <option value=\"0\" >::: 선택하세요::: </option>\r\n                          {\r\n                            csdata.map((item, index) => {\r\n                              return (\r\n                                <option value={item.csId}>[{item.companyId}]- {item.csName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                      </CInputGroup>\r\n                    </div>\r\n                  </form>\r\n                }\r\n\r\n                {userinfo.grade === \"3\" &&\r\n                  <form name=\"schform\" id=\"schform\" metghod=\"post\">\r\n                    <div style={{ paddingBottom: \"5px\", float: \"left\" }}>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 운수사</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"companyId\" maxLength=\"5\" name=\"vendorId\" value={userinfo.vendorid} placeholder=\"\" readOnly />\r\n\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 충전소</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"csId\" maxLength=\"5\" name=\"csId\" value={userinfo.csid} placeholder=\"\" readOnly />\r\n                      </CInputGroup>\r\n                    </div>\r\n                  </form>\r\n                }\r\n                <CDataTable\r\n                  items={items}\r\n                  fields={fields}\r\n                  onRowClick={(item) => getDetail(item._id, item.userId)}\r\n                  scopedSlots={{\r\n                    '이름':\r\n                      (item) => (\r\n                        <td >\r\n                          {item.username}\r\n                        </td>\r\n                      ),\r\n                    '사용자ID':\r\n                      (item) => (\r\n                        <td >\r\n                          {item.userId}\r\n                        </td>\r\n                      ),\r\n                    '운수사':\r\n                      (item) => (\r\n                        <td>\r\n                          {\r\n                            item.companyname.map((item, index) => {\r\n                              return (\r\n                                <CBadge className=\"mr-1\" color=\"primary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{item.companyName}</CBadge>\r\n                              )\r\n                            })\r\n                          }\r\n                        </td>\r\n                      ),\r\n                    '연락처':\r\n                      (item) => (\r\n                        <td>{item.phone}</td>\r\n                      ),\r\n                    '권한':\r\n                      (item) => (\r\n                        <td>\r\n                          <SetGradeTxt grade={item.grade} />\r\n                        </td>\r\n                      ),\r\n                    '상태':\r\n                      (item) => (\r\n                        <td>\r\n                          {item.status === 1 && <CBadge className=\"mr-1\" color=\"warning\" style={{ padding: \"5px\", fontSize: \"13px\" }}>등록중</CBadge>}\r\n                          {item.status === 0 && <CBadge className=\"mr-1\" color=\"dark\" style={{ padding: \"5px\", fontSize: \"13px\" }}>삭제됨</CBadge>}\r\n                        </td>\r\n                      )\r\n                  }}\r\n                />\r\n\r\n              </CCardBody>\r\n            </CCard>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <CCard id=\"writefrm\" style={{ width: \"45%\", position: \"relative\", float: \"left\", display: \"none\" }}>\r\n              <div id=\"detail\" style={{ display: \"none\" }}>\r\n                <CCardHeader>\r\n                  사용자 상세 정보\r\n                </CCardHeader>\r\n                <CCardBody>\r\n\r\n                  <input type=\"hidden\" name=\"id1\" id=\"id1\" defaultValue={detaildata[0]._id} />\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> 운수사</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CSelect custom name=\"select\" id=\"companyId\" value={vendorIdvalue} onChange={e => change(e)} name=\"companyId\" disabled=\"disabled\">\r\n                        <option value=\"0\" disabled=\"disabled\"> ::: 선택하세요 :::</option>\r\n                        {\r\n                          vendordata.map((item, index) => {\r\n                            var a = detaildata[0].companyId === item.companyId ? ' selected' : ''\r\n                            return (\r\n                              <option value={item.companyId}>{item.companyName}</option>\r\n                            )\r\n                          })\r\n                        }\r\n                      </CSelect>\r\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> 충전소</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CSelect custom name=\"csId\" id=\"csId\" value={csIdvalue} onChange={e => change2(e)} disabled=\"disabled\">\r\n                        <option value=\"0\" disabled=\"disabled\"> ::: 선택하세요 :::</option>\r\n                        {\r\n                          csdata1.map((item, index) => {\r\n                            return (\r\n                              <option value={item.csId}>[ {item.companyId} ] - {item.csName}</option>\r\n                            )\r\n                          })\r\n                        }\r\n                      </CSelect>\r\n\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> 사용자ID</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" name=\"userId1\" defaultValue={detaildata[0].userId} readOnly />\r\n                      &nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> 비밀번호</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"password\" name=\"password1\" defaultValue={detaildata[0].password} readOnly />\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>사용자명</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" name=\"username1\" defaultValue={detaildata[0].username} readOnly />\r\n                      &nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>이메일</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"email\" name=\"email1\" defaultValue={detaildata[0].email} readOnly />\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> 권한</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      {detaildata[0].grade === \"3\" && <CInput type=\"text\" defaultValue=\"Monitor\" readOnly ></CInput>}\r\n                      {detaildata[0].grade === \"2\" && <CInput type=\"text\" defaultValue=\"Vendor\" readOnly />}\r\n                      {detaildata[0].grade === \"1\" && <CInput type=\"text\" defaultValue=\"Admin\" readOnly></CInput>}\r\n                      {detaildata[0].grade === \"0\" && <CInput type=\"text\" defaultValue=\"Super\" readOnly></CInput>}\r\n                      &nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> 상태정보 </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      {detaildata[0].status === 0 && <CInput type=\"text\" defaultValue=\"삭제\" readOnly ></CInput>}\r\n                      {detaildata[0].status === 1 && <CInput type=\"text\" defaultValue=\"등록완료\" readOnly />}\r\n                      {detaildata[0].status === 2 && <CInput type=\"text\" defaultValue=\"등록대기\" readOnly></CInput>}\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>연락처</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" name=\"phone1\" defaultValue={detaildata[0].phone} readOnly />\r\n                      &nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>등록일</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" readOnly name=\"createdAt\" defaultValue={moment(detaildata[0].createdAt).format(\"YYYY-MM-DD\")} />\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n                  <CFormGroup className=\"form-actions\">\r\n                    <CButton type=\"button\" onClick={() => updateModal(detaildata[0]._id)} size=\"bg\" color=\"success\" style={{ width: \"100px\" }}>수정</CButton>\r\n                    <CButton type=\"button\" onClick={setTableClose} size=\"bg\" color=\"success\" style={{ float: \"right\", width: \"100px\" }}>닫기</CButton>\r\n                  </CFormGroup>\r\n                </CCardBody>\r\n\r\n\r\n\r\n\r\n                <CCardHeader>\r\n                  로그인 이력\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <CDataTable\r\n                    items={data}\r\n                    fields={fields4}\r\n                    itemsPerPage={5}\r\n                    hover\r\n                    sorter\r\n                    pagination\r\n                    scopedSlots={{\r\n                      '로그인IP':\r\n                        (item) => (\r\n                          <td>\r\n                            {item.ipAddress}\r\n                          </td>\r\n                        ),\r\n                      '로그인 일시':\r\n                        (item) => (\r\n                          <td>\r\n                            {/* {item.createdAt} */}\r\n                            {moment(item.createdAt).format(\"yyyy/MM/DD/ HH시mm분\")}\r\n                          </td>\r\n                        ),\r\n                      '상태':\r\n                        (item) => (\r\n                          <td>{item.state}</td>\r\n                        )\r\n\r\n\r\n\r\n                    }}\r\n                  />\r\n                </CCardBody>\r\n\r\n\r\n\r\n                <CCardHeader>\r\n                  로그 정보\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <CDataTable\r\n                    items={logdata}\r\n                    fields={logfield1}\r\n                    itemsPerPage={5}\r\n                    hover\r\n                    sorter\r\n                    pagination\r\n                    scopedSlots={{\r\n                      '로그 타입':\r\n                        (item) => (\r\n                          <td >\r\n                            {item.log.doctype}\r\n                          </td>\r\n                        ),\r\n                      '로그 일시':\r\n                        (item) => (\r\n                          <td>\r\n                            {/* {item.createdAt} */}\r\n                            {moment(item.createdAt).format(\"yyyy/MM/DD/ HH시mm분\")}\r\n                          </td>\r\n                        ),\r\n                      '입력값':\r\n                        (item) => (\r\n                          <td style={{ width: \"300px\", display: \"block\", overflow: \"hidden\", whiteSpace: \"nowrap\", textOverflow: \"ellipsis\" }}>{item.log.inputdata}</td>\r\n                        ),\r\n                      '메세지':\r\n                        (item) => (\r\n                          <td>{item.log.errmsg}</td>\r\n                        )\r\n                    }}\r\n                  />\r\n                </CCardBody>\r\n\r\n              </div>\r\n\r\n\r\n              <div id=\"insert\" style={{ display: \"none\" }}>\r\n                <CCardHeader>\r\n                  사용자정보 입력\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <CForm action=\"\" name=\"frmadd\" id=\"frmadd\" method=\"post\">\r\n                    <input type=\"hidden\" name=\"id\" id=\"id\" defaultValue={detaildata[0]._id} />\r\n                    {userinfo.grade === \"0\" &&\r\n                      <CFormGroup>\r\n                        <CInputGroup>\r\n                          <CInputGroupPrepend>\r\n                            <CInputGroupText> 운수사</CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <CSelect custom name=\"companyId1\" id=\"companyId\" defaultValue={vendorIdvalue} onChange={e => change13(e)} name=\"companyId1\" disabled={detaildata[0].companyId}>\r\n                            <option value=\"0\" disabled={detaildata[0].companyId}>::: 선택하세요::: </option>\r\n                            {\r\n                              vendordata.map((item, index) => {\r\n                                return (\r\n                                  <option value={item.companyId} >{item.companyName}</option>\r\n                                )\r\n                              })\r\n                            }\r\n                          </CSelect>\r\n                          &nbsp;&nbsp;&nbsp;&nbsp;\r\n                          <CInputGroupPrepend>\r\n                            <CInputGroupText> 충전소</CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <CSelect custom name=\"csId1\" id=\"csId\" value={csIdvalue} onChange={e => change2(e)}>\r\n                            <option value=\"0\"> ::: 선택하세요 :::</option>\r\n                            {\r\n                              csdata1.map((item, index) => {\r\n                                return (\r\n                                  <option value={item.csId}>[ {item.companyId} ] - {item.csName}</option>\r\n                                )\r\n                              })\r\n                            }\r\n                          </CSelect>\r\n                        </CInputGroup>\r\n                      </CFormGroup>\r\n                    }\r\n\r\n                    {userinfo.grade === \"2\" &&\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 운수사</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"select\" id=\"companyId\" value={userinfo.vendorid} onChange={e => change4(e)} name=\"companyId1\" disabled=\"disabled\">\r\n                          <option value=\"0\" disabled=\"disabled\"> 운수사 선택 </option>\r\n                          {\r\n                            vendordata.map((item, index) => {\r\n\r\n                              return (\r\n                                <option value={item.companyId}>{item.companyName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 충전소</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"csId1\" id=\"csId\" value={csIdvalue} onChange={e => change3(e)}>\r\n                          <option value=\"0\" >::: 선택하세요::: </option>\r\n                          {\r\n                            csdata.map((item, index) => {\r\n                              return (\r\n                                <option value={item.csId}>[{item.companyId}]- {item.csName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                      </CInputGroup>\r\n\r\n\r\n                    }\r\n\r\n                    {userinfo.grade === \"3\" &&\r\n\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 운수사</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"select\" id=\"companyId\" value={userinfo.vendorid} name=\"companyId1\" disabled=\"disabled\">\r\n                          <option value=\"0\" disabled=\"disabled\"> 운수사 선택 </option>\r\n                          {\r\n                            vendordata.map((item, index) => {\r\n\r\n                              return (\r\n                                <option value={item.companyId}>{item.companyName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 충전소</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"csId1\" id=\"csId\" value={userinfo.csid} onChange={e => change4(e)} disabled=\"disabled\">\r\n                          <option value=\"0\" disabled=\"disabled\"> ::: 선택하세요 :::</option>\r\n                          {\r\n                            csdata.map((item, index) => {\r\n                              return (\r\n                                <option value={item.csId}>[ {item.companyId} ] - {item.csName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                      </CInputGroup>\r\n\r\n                    }\r\n\r\n                    <br />\r\n                    <CFormGroup>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>사용자ID</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"userId\" name=\"userId\" defaultValue={detaildata[0].userId} />\r\n                        &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 비밀번호</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"password\" id=\"password\" name=\"password\" defaultValue={detaildata[0].password} />\r\n                      </CInputGroup>\r\n                    </CFormGroup>\r\n\r\n\r\n                    <CFormGroup>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>사용자명</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"username\" name=\"username\" defaultValue={detaildata[0].username} />\r\n                        &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>이메일</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"email\" id=\"email\" name=\"email\" defaultValue={detaildata[0].email} />\r\n                      </CInputGroup>\r\n                    </CFormGroup>\r\n\r\n\r\n                    <CFormGroup>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 상태정보 </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom id=\"status\" name=\"status\">\r\n                          <option value=\"1\"> 등록완료 </option>\r\n                          <option value=\"0\"> 삭제 </option>\r\n                          <option value=\"2\"> 등록대기 </option>\r\n                        </CSelect>\r\n\r\n                        &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 권한</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <ManagerGrade grade={gradevalue} changeGrade={changeGrade} />\r\n                      </CInputGroup>\r\n                    </CFormGroup>\r\n\r\n                    <CFormGroup>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>연락처</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"number\" id=\"phone\" name=\"phone\" defaultValue={detaildata[0].phone} />\r\n                      </CInputGroup>\r\n                    </CFormGroup>\r\n\r\n\r\n                    <CFormGroup className=\"form-actions\">\r\n                      <CButton type=\"button\" onClick={openmodal} size=\"bg\" color=\"success\" style={{ width: \"100px\" }}>저장</CButton>\r\n                      <CButton type=\"button\" onClick={setTableClose} size=\"bg\" color=\"success\" style={{ float: \"right\", width: \"100px\" }}>닫기</CButton>\r\n                    </CFormGroup>\r\n\r\n                  </CForm>\r\n                </CCardBody>\r\n\r\n              </div>\r\n\r\n            </CCard>\r\n\r\n          </CRow>\r\n\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Manager","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow\r\n} from '@coreui/react'\r\n\r\n\r\nconst Modals = (props) => {\r\n\r\n  const [modal, setModal] = useState(true)\r\n  const [large, setLarge] = useState(false)\r\n  const [small, setSmall] = useState(false)\r\n  const [primary, setPrimary] = useState(false)\r\n  const [success, setSuccess] = useState(false)\r\n  const [warning, setWarning] = useState(false)\r\n  const [danger, setDanger] = useState(false)\r\n  const [info, setInfo] = useState(false)\r\n  const [ermsg, setErmsg] = useState(\"Error !!\")\r\n  useEffect(() => {\r\n    if (props.data.mode === true) {\r\n      setWarning(!warning);\r\n    } else {\r\n      setWarning(warning);\r\n    }\r\n    setErmsg(\"<div style='padding-top:20px;'><span>\" + props.data.msg + \"</span></div>\")\r\n  }, [props]);\r\n\r\n  const setClose = () => {\r\n    props.fnc(false);\r\n    setWarning(!warning);\r\n  }\r\n\r\n  return (\r\n    <CModal\r\n      show={warning}\r\n      onClose={() => setWarning(!warning)}\r\n      color={props.data.color}\r\n    >\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>TOC System POPUP</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody id=\"txtmsg\" style={{ textAlign: 'center', paddingTop: \"30px\", paddingBottom: \"30px\" }} dangerouslySetInnerHTML={{ __html: ermsg }}>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        {props.mode === \"save\" && <CButton id=\"btn_modal_save\" color=\"warning\" onClick={() => props.handleClick()}>저장</CButton>}\r\n        {props.mode === \"del\" && <CButton id=\"btn_modal_del\" color=\"warning\" onClick={() => props.delClick()}>삭제</CButton>}\r\n        <CButton color=\"secondary\" onClick={() => setClose()}>닫기</CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n\r\n  )\r\n}\r\n\r\nexport default Modals","import axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nimport { CSelect } from '@coreui/react'\r\nimport GV from '../globalSet'\r\n\r\nexport const Vendorlist = (props) => {\r\n\r\n    const [data, setData] = useState(\"\");\r\n    // 페이지내 글로벌 변수 정의  START:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::    \r\n    const [pagesize, setPageSize] = useState(GV.vendorTablepagesize);\r\n    // 페이지내 글로벌 변수 정의  END :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\r\n\r\n    useEffect(() => {\r\n        let listdata = { status: 1, pagesize: pagesize }  // 리스트 출력 기본 세팅값 정의 \r\n        axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/vendorlist\", listdata, props.header.headers).then(result => {\r\n            console.log(result)\r\n            console.log(2)\r\n            setData(result.data.data)\r\n        }).catch(err => {\r\n            console.log(1)\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <CSelect custom name=\"select\" id=\"vendorid\" name=\"vendorid\">\r\n            <option value=\"0\">Please select</option>\r\n            {\r\n                data.map((item, index) => {\r\n                    <option value=\"0\">{item.name_kr}</option>\r\n                })\r\n            }\r\n        </CSelect>\r\n    );\r\n}\r\n\r\nexport const ManagerGrade = (props) => {\r\n    const [data, setData] = useState(\"\");\r\n    return (\r\n        <CSelect custom name=\"select\" value={props.grade} onChange={e => props.changeGrade(e)} id=\"grade\" name=\"grade\">\r\n            <option value=\"3\">Monitor</option>\r\n            <option value=\"2\">Vendor</option>\r\n            <option value=\"1\">Admin</option>\r\n            <option value=\"0\">Super</option>\r\n        </CSelect>\r\n    );\r\n}\r\n\r\n\r\nexport const SetGradeTxt = (props) => {\r\n    let gradetxt = \"\";\r\n    switch (props.grade) {\r\n        case \"0\":\r\n            gradetxt = \"Super\";\r\n            break;\r\n        case \"1\":\r\n            gradetxt = \"Admin\";\r\n            break;\r\n        case \"2\":\r\n            gradetxt = \"Vendor\";\r\n            break;\r\n        case \"3\":\r\n            gradetxt = \"Monitor\";\r\n            break;\r\n        default:\r\n            gradetxt = \"Monitor\";\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div>{gradetxt}</div>\r\n    )\r\n}"],"sourceRoot":""}