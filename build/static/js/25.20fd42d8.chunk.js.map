{"version":3,"sources":["views/contents/Logininfo.js"],"names":["Logininfo","fields1","key","_classes","isMobile","useCookies","cookies","configHeader","headers","Authorization","TocToken","useState","GV","vendorTablepagesize","pagesize","fields","UTIL","userinfo","vendordata","setVendorData","csIdvalue","setCsIdvalue","vendorIdvalue","setVendorIdvalue","items","setItems","setLoading","page","setPages","itemsPerPage","columnFilterValue","tableFilterValue","sorterValue","csdata","setCsData","fetchTrigger","setFetchTrigger","mode","msg","color","setModal","params","JSON","stringify","query","URLSearchParams","toString","useEffect","grade","axios","post","process","then","result","data","docs","totalPages","catch","err","setTimeout","change4","change3","listdata","status","e","target","value","companyId","vendorid","$","val","csId","alert","id","className","style","width","position","float","name","metghod","paddingBottom","custom","defaultValue","onChange","map","item","index","companyName","csName","disabled","type","maxLength","placeholder","readOnly","csid","hover","sorter","pagination","scopedSlots","userId","ipAddress","createdAt","state"],"mappings":"uSA4SeA,UAzRG,WAAO,IAAD,IAGlBC,EAAU,CAAC,CAAEC,IAAK,qBAAOC,SAAU,cAAgB,CAAED,IAAK,qBAAOC,SAAU,cAAgB,CAAED,IAAK,uCAAUC,SAAU,cAAgB,CAAED,IAAK,KAAMC,SAAU,cAAgB,CAAED,IAAK,iCAASC,SAAU,cAAgB,CAAED,IAAK,eAAMC,SAAU,eAC9OC,aAAYH,EAAU,CAAC,CAAEC,IAAK,uCAAUC,SAAU,cAAgB,CAAED,IAAK,KAAMC,SAAU,cAAgB,CAAED,IAAK,iCAASC,SAAU,cAAgB,CAAED,IAAK,eAAMC,SAAU,gBAE1KC,WANkB,MAOJC,YAAW,CAAC,UAAvBC,EAPe,oBAQhBC,EAAe,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYH,EAAQI,YAR7C,EASUC,mBAASC,EAAGC,qBATtB,mBASfC,EATe,aAUMH,mBAASV,IAVf,mBAUfc,EAVe,aAWHJ,mBAASK,IAAiBV,KAAtCW,EAXe,sBAYcN,mBAAS,IAZvB,mBAYfO,EAZe,KAYHC,EAZG,OAaYR,mBAAS,IAbrB,mBAafS,EAbe,KAaJC,EAbI,OAcoBV,mBAAS,IAd7B,mBAcfW,EAde,KAcAC,EAdA,OAgBIZ,mBAAS,IAhBb,mBAgBfa,EAhBe,KAgBRC,EAhBQ,OAiBQd,oBAAS,GAjBjB,mBAiBNe,GAjBM,aAkBEf,mBAAS,GAlBX,mBAkBfgB,EAlBe,aAmBIhB,mBAAS,IAnBb,mBAmBRiB,GAnBQ,aAoBkBjB,mBAAS,GApB3B,mBAoBfkB,EApBe,aAqB4BlB,sBArB5B,oBAqBfmB,GArBe,gBAsB0BnB,mBAAS,KAtBnC,qBAsBfoB,GAtBe,gBAuBgBpB,sBAvBhB,qBAuBfqB,GAvBe,gBAwBMrB,mBAAS,KAxBf,qBAwBfsB,GAxBe,MAwBPC,GAxBO,SAyBkBvB,mBAAS,GAzB3B,qBAyBfwB,GAzBe,MAyBDC,GAzBC,SA0BMzB,mBAAS,CAAE0B,MAAM,EAAOC,IAAK,GAAIC,MAAO,SA1B9C,qBA0BNC,IA1BM,aA4BhBC,GAAS,CACbd,OACAG,kBAAmBY,KAAKC,UAAUb,IAClCC,oBACAC,YAAaU,KAAKC,UAAUX,IAC5BH,gBAGIe,GAAQ,IAAIC,gBAAgBJ,IAAQK,WAE1CC,qBAAU,WACe,MAAnB9B,EAAS+B,MAEXC,IAAMC,KAAKC,uDAAiEV,GAAQlC,GAAc6C,MAAK,SAAAC,GACrG5B,EAAS4B,EAAOC,KAAKA,KAAKC,MAC1B3B,EAASyB,EAAOC,KAAKA,KAAKE,YAC1B9B,GAAW,MACV+B,OAAM,SAAAC,GAEP1C,IAAe0C,GACfC,YAAW,WACTvB,GAAgBD,GAAe,KAC9B,SAGLyB,KACAC,QAED,CAACjB,GAAOT,KAEXY,qBAAU,WACR,IAAIe,EAAW,CAAEC,OAAQ,EAAGjD,SAAUA,GACtCmC,IAAMC,KAAKC,iDAA2DW,EAAUvD,GAAc6C,MAAK,SAAAC,GACjG5B,EAAS4B,EAAOC,KAAKA,KAAKC,MAC1B3B,EAASyB,EAAOC,KAAKA,KAAKE,YAC1B9B,GAAW,GACXP,EAAckC,EAAOC,KAAKA,SACzBG,OAAM,SAAAC,GACPlB,GAASxB,IAAe0C,SAEzB,IAEH,IAAME,GAAU,SAACI,GACf,GAAuB,MAAnB/C,EAAS+B,MAAe,CAC1BzB,EAAiByC,EAAEC,OAAOC,OAC1B,IAAIJ,EAAW,CAAEC,OAAQ,EAAGjD,SAAUA,EAAUqD,UAAWH,EAAEC,OAAOC,OACpEjB,IAAMC,KAAKC,gDAA0DW,EAAUvD,GAAc6C,MAAK,SAAAC,GAChGnB,GAAUmB,EAAOC,KAAKA,SAErBG,OAAM,SAAAC,GACPlB,GAASxB,IAAe0C,WAErB,CACL,IAAII,EAAW,CAAEC,OAAQ,EAAGjD,SAAUA,EAAUqD,UAAWlD,EAASmD,UACpEnB,IAAMC,KAAKC,gDAA0DW,EAAUvD,GAAc6C,MAAK,SAAAC,GAChGnB,GAAUmB,EAAOC,KAAKA,SAErBG,OAAM,SAAAC,GACPlB,GAASxB,IAAe0C,SAKxBG,GAAU,SAACG,GACQ,MAAnB/C,EAAS+B,OACX3B,EAAa2C,EAAEC,OAAOC,OAIxB,IAGIC,EAAYE,IAAE,+BAA+BC,MAC7CC,EAAOF,IAAE,0BAA0BC,MAGvC,GAAkB,KAAdH,EAKJ,GAAa,KAATI,EAAJ,CAKA,IAAIT,EAAW,CAAEC,OAAQ,EAAGjD,SAAUA,EAAUqD,UAAWA,EAAWI,KAAMA,GAC5EtB,IAAMC,KAAKC,yDAAuCW,EAAUvD,GAAc6C,MAAK,SAAAC,GAC7E5B,EAAS4B,EAAOC,KAAKA,MACrB5B,GAAW,MACV+B,OAAM,SAAAC,GACPlB,GAASxB,IAAe0C,YATxBc,MAAM,qMALNA,MAAM,2JAkBV,OACE,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,GAAG,aAAaC,UAAU,MAAMC,MAAO,CAAEC,MAAO,OAAQC,SAAU,WAAYC,MAAO,QAA5F,UACsB,MAAnB7D,EAAS+B,OACR,sBAAM+B,KAAK,UAAUN,GAAG,UAAUO,QAAQ,OAA1C,SACE,qBAAKL,MAAO,CAAEM,cAAe,MAAOH,MAAO,QAA3C,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,oCAEF,eAAC,KAAD,GAASI,QAAM,EAACH,KAAK,SAASN,GAAG,YAAYU,aAAc7D,EAAe8D,SAAU,SAAApB,GAAC,OAAIJ,GAAQI,KAAjG,qBAA0G,aAA1G,0BACE,wBAAQE,MAAM,IAAd,+CAEEhD,EAAWmE,KAAI,SAACC,EAAMC,GAEpB,OACE,wBAAQrB,MAAOoB,EAAKnB,UAApB,SAAgCmB,EAAKE,mBAN7C,IAJF,2BAgBE,cAAC,IAAD,UACE,cAAC,IAAD,oCAEF,eAAC,IAAD,CAASN,QAAM,EAACH,KAAK,OAAON,GAAG,OAAOU,aAAc/D,EAAWgE,SAAU,SAAApB,GAAC,OAAIH,GAAQG,IAAtF,UACE,wBAAQE,MAAM,IAAd,oDAEEjC,GAAOoD,KAAI,SAACC,EAAMC,GAChB,OACE,yBAAQrB,MAAOoB,EAAKf,KAApB,cAA4Be,EAAKnB,UAAjC,MAA+CmB,EAAKG,uBAWhD,MAAnBxE,EAAS+B,OACR,sBAAM+B,KAAK,UAAUN,GAAG,UAAUO,QAAQ,OAA1C,SACE,qBAAKL,MAAO,CAAEM,cAAe,MAAOH,MAAO,QAA3C,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,oCAEF,eAAC,KAAD,GAASI,QAAM,EAACH,KAAK,SAASN,GAAG,YAAYP,MAAOjD,EAASmD,SAAUgB,SAAU,SAAApB,GAAC,OAAIJ,GAAQI,KAA9F,qBAAuG,aAAvG,yBAA4H,YAA5H,0BACE,wBAAQE,MAAM,IAAIwB,SAAS,WAA3B,+CAEExE,EAAWmE,KAAI,SAACC,EAAMC,GAEpB,OACE,wBAAQrB,MAAOoB,EAAKnB,UAApB,SAAgCmB,EAAKE,mBAN7C,IAJF,2BAgBE,cAAC,IAAD,UACE,cAAC,IAAD,oCAEF,eAAC,IAAD,CAASN,QAAM,EAACH,KAAK,OAAON,GAAG,OAAOU,aAAc/D,EAAWgE,SAAU,SAAApB,GAAC,OAAIH,GAAQG,IAAtF,UACE,wBAAQE,MAAM,IAAd,oDAEEjC,GAAOoD,KAAI,SAACC,EAAMC,GAChB,OACE,yBAAQrB,MAAOoB,EAAKf,KAApB,cAA4Be,EAAKnB,UAAjC,MAA+CmB,EAAKG,uBAUhD,MAAnBxE,EAAS+B,OACR,sBAAM+B,KAAK,UAAUN,GAAG,UAAUO,QAAQ,OAA1C,SACE,qBAAKL,MAAO,CAAEM,cAAe,MAAOH,MAAO,QAA3C,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,oCAEF,cAAC,IAAD,CAAQa,KAAK,OAAOlB,GAAG,YAAYmB,UAAU,IAAIb,KAAK,YAAYb,MAAOjD,EAASmD,SAAUyB,YAAY,GAAGC,UAAQ,IAJrH,2BAOE,cAAC,IAAD,UACE,cAAC,IAAD,oCAEF,cAAC,IAAD,CAAQH,KAAK,OAAOlB,GAAG,OAAOmB,UAAU,IAAIb,KAAK,OAAOb,MAAOjD,EAAS8E,KAAMF,YAAY,GAAGC,UAAQ,WAK7G,cAAC,IAAD,CACEtE,MAAOA,EACPT,OAAQA,EACRc,aAAc,GACdmE,OAAK,EACLC,QAAM,EACNC,YAAU,EACVC,YAAa,CACX,qBACE,SAACb,GAAD,OACE,6BACGA,EAAKnB,aAGZ,qBACE,SAACmB,GAAD,OACE,6BACGA,EAAKf,QAGZ,uCACE,SAACe,GAAD,OACE,6BACGA,EAAKc,UAGZ,GACE,SAACd,GAAD,OACE,6BACGA,EAAKe,aAGZ,iCACE,SAACf,GAAD,OACE,6BAAKA,EAAKgB,aAEd,eACE,SAAChB,GAAD,OACE,6BAAKA,EAAKiB","file":"static/js/25.20fd42d8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CCard,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CSelect,\r\n} from '@coreui/react'\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\nimport * as UTIL from 'src/util/Fnc'\r\nimport { useCookies } from 'react-cookie';\r\nimport GV from '../../globalSet'\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nconst Logininfo = () => {\r\n\r\n  // 페이지내 글로벌 변수 정의  START:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\r\n  var fields1 = [{ key: '운수사', _classes: 'Tablefirst' }, { key: '충전소', _classes: 'Tablefirst' }, { key: '로그인아이디', _classes: 'Tablefirst' }, { key: 'IP', _classes: 'Tablefirst' }, { key: '로그인일시', _classes: 'Tablefirst' }, { key: '상태', _classes: 'Tablefirst' }]\r\n  if (isMobile) { fields1 = [{ key: '로그인아이디', _classes: 'Tablefirst' }, { key: 'IP', _classes: 'Tablefirst' }, { key: '로그인일시', _classes: 'Tablefirst' }, { key: '상태', _classes: 'Tablefirst' }] }\r\n  var fields2 = [{ key: '운수사', _classes: 'Tablefirst' }, { key: '충전소', _classes: 'Tablefirst' }, { key: '로그인아이디', _classes: 'Tablefirst' }, { key: 'IP', _classes: 'Tablefirst' }, { key: '로그인일시', _classes: 'Tablefirst' }, { key: '상태', _classes: 'Tablefirst' }]\r\n  if (isMobile) { fields2 = [{ key: '로그인아이디', _classes: 'Tablefirst' }, { key: 'IP', _classes: 'Tablefirst' }, { key: '로그인일시', _classes: 'Tablefirst' }, { key: '상태', _classes: 'Tablefirst' }] }\r\n  const [cookies] = useCookies(['token']);  //Auth    \r\n  const configHeader = { headers: { Authorization: `Bearer ${cookies.TocToken}` } } // axios 전송을 위한 헤더값 세팅\r\n  const [pagesize, setPageSize] = useState(GV.vendorTablepagesize);\r\n  const [fields, setFields] = useState(fields1)\r\n  const [userinfo] = useState(UTIL.getUserInfo(cookies))\r\n  const [vendordata, setVendorData] = useState([]);\r\n  const [csIdvalue, setCsIdvalue] = useState(\"\");   // 사용자 추가시 벤더아이디 설정 \r\n  const [vendorIdvalue, setVendorIdvalue] = useState(\"\");   // 사용자 추가시 벤더아이디 설정 \r\n  // 라이브 페이징을 위한 정의  START\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [pages, setPages] = useState(5);\r\n  const [itemsPerPage, setItemsPerPage] = useState(5);\r\n  const [columnFilterValue, setColumnFilterValue] = useState();\r\n  const [tableFilterValue, setTableFilterValue] = useState(\"\");\r\n  const [sorterValue, setSorterValue] = useState();\r\n  const [csdata, setCsData] = useState([]);\r\n  const [fetchTrigger, setFetchTrigger] = useState(0);\r\n  const [warning, setModal] = useState({ mode: false, msg: \"\", color: \"info\" });    // 모달 팝업용\r\n\r\n  const params = {\r\n    page,\r\n    columnFilterValue: JSON.stringify(columnFilterValue),\r\n    tableFilterValue,\r\n    sorterValue: JSON.stringify(sorterValue),\r\n    itemsPerPage\r\n  };\r\n  // 라이브 페이징을 위한 정의  END\r\n  const query = new URLSearchParams(params).toString();\r\n\r\n  useEffect(() => {\r\n    if (userinfo.grade === \"0\") {\r\n      // 리스트 출력 기본 세팅값 정의 \r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_report/loginlist\", params, configHeader).then(result => {\r\n        setItems(result.data.data.docs);\r\n        setPages(result.data.data.totalPages);\r\n        setLoading(false);\r\n      }).catch(err => {\r\n\r\n        UTIL.api401chk(err);\r\n        setTimeout(() => {\r\n          setFetchTrigger(fetchTrigger + 1);\r\n        }, 2000);\r\n      });\r\n    } else {\r\n      change4();\r\n      change3();\r\n    }\r\n  }, [query, fetchTrigger]);\r\n\r\n  useEffect(() => {\r\n    let listdata = { status: 1, pagesize: pagesize }  // 리스트 출력 기본 세팅값 정의 \r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/vendorlist\", listdata, configHeader).then(result => {\r\n      setItems(result.data.data.docs);\r\n      setPages(result.data.data.totalPages);\r\n      setLoading(false);\r\n      setVendorData(result.data.data)\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }, [])\r\n\r\n  const change4 = (e) => {\r\n    if (userinfo.grade === \"0\") {\r\n      setVendorIdvalue(e.target.value)\r\n      let listdata = { status: 1, pagesize: pagesize, companyId: e.target.value }  // 리스트 출력 기본 세팅값 정의\r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n        setCsData(result.data.data)\r\n\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      })\r\n    } else {\r\n      let listdata = { status: 1, pagesize: pagesize, companyId: userinfo.vendorid }  // 리스트 출력 기본 세팅값 정의 \r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n        setCsData(result.data.data)\r\n\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      })\r\n    }\r\n  }\r\n\r\n  const change3 = (e) => {\r\n    if (userinfo.grade === \"0\") {\r\n      setCsIdvalue(e.target.value)\r\n    } else {\r\n\r\n    }\r\n    let url = \"/api/pages_report/loginselect\";\r\n\r\n\r\n    let companyId = $('#schform [name=\"companyId\"]').val();\r\n    let csId = $('#schform [name=\"csId\"]').val();\r\n\r\n\r\n    if (companyId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 충전소를 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    if (csId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 검색 시작일과 종료일을 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: companyId, csId: csId }  // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + url, listdata, configHeader).then(result => {\r\n      setItems(result.data.data);\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol>\r\n          <CRow>\r\n            <CCard id=\"listtable2\" className=\"p-5\" style={{ width: \"100%\", position: \"relative\", float: \"left\" }}>\r\n              {userinfo.grade === \"0\" &&\r\n                <form name=\"schform\" id=\"schform\" metghod=\"post\">\r\n                  <div style={{ paddingBottom: \"5px\", float: \"left\" }}>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> 운수사</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CSelect custom name=\"select\" id=\"companyId\" defaultValue={vendorIdvalue} onChange={e => change4(e)} name=\"companyId\" >\r\n                        <option value=\"0\" > 운수사 선택 </option>\r\n                        {\r\n                          vendordata.map((item, index) => {\r\n\r\n                            return (\r\n                              <option value={item.companyId}>{item.companyName}</option>\r\n                            )\r\n                          })\r\n                        }\r\n                      </CSelect>\r\n                      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> 충전소</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CSelect custom name=\"csId\" id=\"csId\" defaultValue={csIdvalue} onChange={e => change3(e)}>\r\n                        <option value=\"0\" >::: 선택하세요::: </option>\r\n                        {\r\n                          csdata.map((item, index) => {\r\n                            return (\r\n                              <option value={item.csId}>[{item.companyId}]- {item.csName}</option>\r\n                            )\r\n                          })\r\n                        }\r\n                      </CSelect>\r\n                    </CInputGroup>\r\n                  </div>\r\n                </form>\r\n              }\r\n\r\n\r\n              {userinfo.grade === \"2\" &&\r\n                <form name=\"schform\" id=\"schform\" metghod=\"post\">\r\n                  <div style={{ paddingBottom: \"5px\", float: \"left\" }}>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> 운수사</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CSelect custom name=\"select\" id=\"companyId\" value={userinfo.vendorid} onChange={e => change4(e)} name=\"companyId\" disabled=\"disabled\">\r\n                        <option value=\"0\" disabled=\"disabled\"> 운수사 선택 </option>\r\n                        {\r\n                          vendordata.map((item, index) => {\r\n\r\n                            return (\r\n                              <option value={item.companyId}>{item.companyName}</option>\r\n                            )\r\n                          })\r\n                        }\r\n                      </CSelect>\r\n                      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> 충전소</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CSelect custom name=\"csId\" id=\"csId\" defaultValue={csIdvalue} onChange={e => change3(e)}>\r\n                        <option value=\"0\" >::: 선택하세요::: </option>\r\n                        {\r\n                          csdata.map((item, index) => {\r\n                            return (\r\n                              <option value={item.csId}>[{item.companyId}]- {item.csName}</option>\r\n                            )\r\n                          })\r\n                        }\r\n                      </CSelect>\r\n                    </CInputGroup>\r\n                  </div>\r\n                </form>\r\n              }\r\n\r\n              {userinfo.grade === \"3\" &&\r\n                <form name=\"schform\" id=\"schform\" metghod=\"post\">\r\n                  <div style={{ paddingBottom: \"5px\", float: \"left\" }}>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> 운수사</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" id=\"companyId\" maxLength=\"5\" name=\"companyId\" value={userinfo.vendorid} placeholder=\"\" readOnly />\r\n\r\n                      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> 충전소</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" id=\"csId\" maxLength=\"5\" name=\"csId\" value={userinfo.csid} placeholder=\"\" readOnly />\r\n                    </CInputGroup>\r\n                  </div>\r\n                </form>\r\n              }\r\n              <CDataTable\r\n                items={items}\r\n                fields={fields}\r\n                itemsPerPage={10}\r\n                hover\r\n                sorter\r\n                pagination\r\n                scopedSlots={{\r\n                  '운수사':\r\n                    (item) => (\r\n                      <td >\r\n                        {item.companyId}\r\n                      </td>\r\n                    ),\r\n                  '충전소':\r\n                    (item) => (\r\n                      <td >\r\n                        {item.csId}\r\n                      </td>\r\n                    ),\r\n                  '로그인아이디':\r\n                    (item) => (\r\n                      <td >\r\n                        {item.userId}\r\n                      </td>\r\n                    ),\r\n                  'IP':\r\n                    (item) => (\r\n                      <td>\r\n                        {item.ipAddress}\r\n                      </td>\r\n                    ),\r\n                  '로그인일시':\r\n                    (item) => (\r\n                      <td>{item.createdAt}</td>\r\n                    ),\r\n                  '상태':\r\n                    (item) => (\r\n                      <td>{item.state}\r\n                        {/* {item.state === \"login\" && <CBadge className=\"mr-1\" color=\"warning\" style={{padding:\"5px\",fontSize:\"13px\"}}>로그인</CBadge> }\r\n                      {item.state === \"logout\" && <CBadge className=\"mr-1\" color=\"dark\" style={{padding:\"5px\",fontSize:\"13px\"}}>로그아웃</CBadge> } */}\r\n                      </td>\r\n                    )\r\n                }}\r\n              />\r\n\r\n            </CCard>\r\n\r\n\r\n\r\n\r\n          </CRow>\r\n\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Logininfo"],"sourceRoot":""}