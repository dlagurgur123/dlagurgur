{"version":3,"sources":["views/contents/Chargercontrol.js","views/modals/Modals.js"],"names":["defaultValue","_id","vendorId","line_num","line_name","Chargerinfo","fields1","key","_classes","isMobile","useCookies","cookies","configHeader","headers","Authorization","TocToken","useState","mode","msg","color","setModal","GV","chargerTablepagesize","pagesize","fields","useRef","require","vendordata","setVendorData","vendorIdvalue","setVendorIdvalue","items","setItems","setLoading","csdata","setCsData","csIdvalue","setCsIdvalue","currentlimit","UTIL","userinfo","countpage","setCountPage","useEffect","grade","ChargerStationList","chargerSelect","listdata","status","params","axios","post","process","then","result","data","docs","slice","catch","err","handleScroll","scrollHeight","document","documentElement","scrollTop","clientHeight","companyId","$","val","csId","scrollList","scrollListSelect","window","addEventListener","removeEventListener","e","target","value","vendorid","alert","id","style","width","position","verticalAlign","textAlign","name","metghod","paddingBottom","float","custom","onChange","map","item","index","companyName","csName","type","maxLength","placeholder","readOnly","csid","striped","sorter","pagination","itemsPerPage","clickableRows","scopedSlots","companyname","className","padding","fontSize","csname","src","connectorNo","alt","modelNo","manufacturer","Modals","props","warning","setWarning","ermsg","setErmsg","show","onClose","closeButton","paddingTop","dangerouslySetInnerHTML","__html","onClick","handleClick","delClick","fnc"],"mappings":"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","file":"static/js/13.a233da4f.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CButton,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CSelect,\r\n  CPagination,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter\r\n} from '@coreui/react'\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\nimport * as UTIL from 'src/util/Fnc'\r\nimport { useCookies } from 'react-cookie';\r\nimport MODAL from '../modals/Modals';\r\nimport GV from '../../globalSet'\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nconst defaultValue = [{ _id: \"\", vendorId: \"\", line_num: \"\", line_name: \"\" }];\r\nconst Chargerinfo = () => {\r\n\r\n  // 페이지내 글로벌 변수 정의  START:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\r\n\r\n  var fields1 = [{ key: '운수사', _classes: 'Tablefirst' }, { key: '충전소', _classes: 'Tablefirst' }, { key: '충전기 정보', _classes: 'Tablefirst' }, { key: '상태', _classes: 'Tablefirst' }, { key: '모델명', _classes: 'Tablefirst' }, { key: '충전기 제조사', _classes: 'Tablefirst' }, { key: '충전기 상태 설정', _classes: 'Tablefirst' }]\r\n  if (isMobile) { fields1 = [{ key: '운수사', _classes: 'Tablefirst' }, { key: '아이디', _classes: 'Tablefirst' }, { key: '상태', _classes: 'Tablefirst' }, { key: '충전건갯수', _classes: 'Tablefirst' }, { key: '충전기 제조사', _classes: 'Tablefirst' }] }\r\n  var fields2 = [{ key: '운수사', _classes: 'Tablefirst' }, { key: '충전소', _classes: 'Tablefirst' }, { key: '충전기 정보', _classes: 'Tablefirst' }, { key: '상태', _classes: 'Tablefirst' }]\r\n  if (isMobile) { fields2 = [{ key: '운수사', _classes: 'Tablefirst' }, { key: '아이디', _classes: 'Tablefirst' }, { key: '상태', _classes: 'Tablefirst' }, { key: '충전건갯수', _classes: 'Tablefirst' }, { key: '충전기 제조사', _classes: 'Tablefirst' }] }\r\n  const [cookies] = useCookies(['token']);  //Auth    \r\n  const configHeader = { headers: { Authorization: `Bearer ${cookies.TocToken}` } } // axios 전송을 위한 헤더값 세팅\r\n  const [warning, setModal] = useState({ mode: false, msg: \"\", color: \"info\" });    // 모달 팝업용\r\n  const [pagesize, setPageSize] = useState(GV.chargerTablepagesize);\r\n  const [fields, setFields] = useState(fields1)\r\n  const [mode, setMode] = useState(\"alert\");\r\n  const fileInput = useRef();\r\n  const [cpanyName, setCompanyName] = useState([]);\r\n  const socketUrl = process.env.REACT_APP_WSSERVER;   // 웹소켓 서버 연결 설정\r\n\r\n  // 페이지내 글로벌 변수 정의  END :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\r\n  const moment = require('moment');\r\n  const [detaildata, setDetailData] = useState(defaultValue);\r\n  const [vendordata, setVendorData] = useState([]);\r\n  const [vendorIdvalue, setVendorIdvalue] = useState(\"\");   // 사용자 추가시 벤더아이디 설정 \r\n  // 라이브 페이징을 위한 정의  START\r\n  const [items, setItems] = useState([]);\r\n  const [failure, setFailure] = useState([]);\r\n  const [csdata1, setCsData1] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [csdata, setCsData] = useState([]);  // 소속업체 정의\r\n  const [configData, setconfigData] = useState([]);  // 소속업체 정의\r\n  const configfields = [{ key: 'Key', _classes: 'Tablefirst' }, { key: 'Value', _classes: 'Tablefirst' }, { key: '수정 삭제', _classes: 'Tablefirst' },]\r\n  const [csIdvalue, setCsIdvalue] = useState(\"\");\r\n  const [firmdata, setFirmData] = useState([]);  // 소속업체 정의\r\n  const [uploadFile, setUploadFile] = useState();\r\n  const [selectedFile, setSelectedFile] = useState(\"\");\r\n\r\n  const [firmstatusdata, setFirmstatusdata] = useState(\"\");   // 펌웨어 상태정보 리스트 출력용\r\n  const [configset, setConfigSet] = useState({ currentlimit: \"\" });   //충전기 configuration\r\n\r\n  const [userinfo] = useState(UTIL.getUserInfo(cookies))\r\n  const [modal, setModal1] = useState(false);\r\n  const [modal12, setModal12] = useState(false);\r\n  const [modal13, setModal13] = useState(false);\r\n\r\n  const [configKey, setConfigKey] = useState(\"\");\r\n  const [configValue, setConfigValue] = useState(\"\");\r\n  const [countpage, setCountPage] = useState(25)\r\n\r\n\r\n  useEffect(() => {\r\n    if (userinfo.grade != \"0\") {\r\n      ChargerStationList();\r\n      chargerSelect();\r\n    } else {\r\n      let listdata = { status: 1, params: pagesize }  // 리스트 출력 기본 세팅값 정의 \r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_charger/chargerlist\", listdata, configHeader).then(result => {\r\n        if (result) {\r\n          setItems(result.data.data.docs.slice(0, 15));\r\n        }\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  //무한 스크롤\r\n  const handleScroll = () => {\r\n    const scrollHeight = document.documentElement.scrollHeight;\r\n    const scrollTop = document.documentElement.scrollTop;\r\n    const clientHeight = document.documentElement.clientHeight;\r\n    let companyId = $('#schform [name=\"companyId\"]').val();\r\n    let csId = $('#schform [name=\"csId\"]').val();\r\n    if (scrollTop + clientHeight >= scrollHeight) {\r\n      if (userinfo.grade === \"0\") {\r\n        if (companyId === \"0\" && csId === \"0\") {\r\n          setCountPage(countpage + 10)\r\n          scrollList()\r\n        } else {\r\n          setCountPage(countpage + 10)\r\n          scrollListSelect();\r\n        }\r\n      } else {\r\n        setCountPage(countpage + 10)\r\n        ChargerStationList();\r\n        scrollListSelect();\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    // scroll event listener 등록\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      // scroll event listener 해제\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  });\r\n\r\n\r\n  // 사용자 리스트 호출 함수 \r\n  const scrollList = () => {\r\n    let listdata = { status: 1, params: pagesize }  // 리스트 출력 기본 세팅값 정의 \r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_charger/chargerlist\", listdata, configHeader).then(result => {\r\n      if (result) {\r\n        setItems(result.data.data.docs.slice(0, countpage));\r\n\r\n      }\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    });\r\n  }\r\n\r\n\r\n  // 사용자 리스트 호출 함수 \r\n  const getList = () => {\r\n    let listdata = { status: 1, params: pagesize }  // 리스트 출력 기본 세팅값 정의 \r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_charger/chargerlist\", listdata, configHeader).then(result => {\r\n      if (result) {\r\n        setItems(result.data.data.docs.slice(0, 15));\r\n\r\n      }\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    });\r\n  }\r\n\r\n  //d운수사 리스트\r\n  useEffect(() => {\r\n    let listdata = { status: 1, pagesize: pagesize }  // 리스트 출력 기본 세팅값 정의 \r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/vendorlist\", listdata, configHeader).then(result => {\r\n      setVendorData(result.data.data)\r\n    }).catch(err => {\r\n      //UTIL.api401chk(err);\r\n      setModal(UTIL.api401chk(err))\r\n    })\r\n  }, [])\r\n\r\n\r\n\r\n  const change15 = () => {\r\n\r\n    let txt = \"\";\r\n    let url = \"/api/pages_charger/chargerlist\";\r\n\r\n\r\n    let companyId = $('#schform [name=\"companyId\"]').val();\r\n    let csId = $('#schform [name=\"csId\"]').val();\r\n\r\n    if (companyId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 충전소를 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    if (csId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 검색 시작일과 종료일을 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: companyId, csId: csId }  // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + url, listdata, configHeader).then(result => {\r\n\r\n      setItems(result.data.data.docs);\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n\r\n  const goWs = () => {\r\n    let socket = new WebSocket(process.env.REACT_APP_WSSERVER + \"/ocpp/PMGROW-ADM-102\");\r\n    socket.onopen = function () {\r\n      (\"connection server\");\r\n      sendMsg()\r\n    };\r\n\r\n    socket.onmessage = function (e) {\r\n      const data = JSON.parse(e.data);\r\n\r\n    };\r\n\r\n    const sendMsg = () => {\r\n      socket.send(\r\n        JSON.stringify({\r\n          admintype: \"adminsend\",\r\n          clientid: \"CSTL-P480-100\",\r\n          msg: [3, 12123132, \"GetConfiguration\", { \"key\": [\"currentlimit\"] }]\r\n        })\r\n      );\r\n    };\r\n\r\n    socket.onclose = function (event) {\r\n      if (event.wasClean) {\r\n        console.log(\"[close] 커넥션 종료됨\");\r\n      } else {\r\n        console.log(\"[close] 커넥션 error\");\r\n      }\r\n    };\r\n  }\r\n\r\n  const change13 = (e) => {\r\n    setVendorIdvalue(e.target.value)\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: e.target.value }  // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n      setCsData1(result.data.data)\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n  // 소속업체 선택시 소속 충전소 정보 호출하기\r\n  const change10 = (e) => {\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: vendorIdvalue }  // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n      setCsData1(result.data.data)\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n  //벤더,모니터 권한 유저 충전소 select\r\n  const ChargerStationList = (e) => {\r\n    if (userinfo.grade === \"0\") {\r\n      setVendorIdvalue(e.target.value)\r\n      let listdata = { status: 1, pagesize: pagesize, companyId: e.target.value }  // 리스트 출력 기본 세팅값 정의\r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n        setCsData(result.data.data)\r\n\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      })\r\n    } else {\r\n      let listdata = { status: 1, pagesize: pagesize, companyId: userinfo.vendorid }  // 리스트 출력 기본 세팅값 정의 \r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n        setCsData(result.data.data)\r\n\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  //충전기 검색 기능\r\n  const chargerSelect = (e) => {\r\n    if (userinfo.grade === \"0\") {\r\n      setCsIdvalue(e.target.value)\r\n    }\r\n    let txt = \"\";\r\n    let url = \"/api/pages_charger/chargerlist\";\r\n\r\n\r\n    let companyId = $('#schform [name=\"companyId\"]').val();\r\n    let csId = $('#schform [name=\"csId\"]').val();\r\n\r\n    if (companyId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 충전소를 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    if (csId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 검색 시작일과 종료일을 반드시 선택해주세요');\r\n      return;\r\n    }\r\n    UTIL.writeani('close')\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: companyId, csId: csId }  // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + url, listdata, configHeader).then(result => {\r\n      setItems(result.data.data.docs.slice(0, 15));\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n\r\n  //검색한 상태에서 무한 스크롤\r\n  const scrollListSelect = (e) => {\r\n    let txt = \"\";\r\n    let url = \"/api/pages_charger/chargerlist\";\r\n    let companyId = $('#schform [name=\"companyId\"]').val();\r\n    let csId = $('#schform [name=\"csId\"]').val();\r\n\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: companyId, csId: csId }  // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + url, listdata, configHeader).then(result => {\r\n      setItems(result.data.data.docs.slice(0, countpage));\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol>\r\n\r\n          <CRow>\r\n\r\n            <CCard id=\"listtable2\" style={{ width: \"100%\", position: \"relative\", verticalAlign: \"middle\" }}>\r\n              <CCardHeader>\r\n                충전기 제어\r\n\r\n\r\n\r\n              </CCardHeader>\r\n              <CCardBody style={{ textAlign: \"center\", verticalAlign: \"middle\" }}>\r\n                {userinfo.grade === \"0\" &&\r\n                  <form name=\"schform\" id=\"schform\" metghod=\"post\">\r\n                    <div style={{ paddingBottom: \"5px\", float: \"left\" }}>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 운수사</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"select\" id=\"companyId\" defaultValue={vendorIdvalue} onChange={e => ChargerStationList(e)} name=\"companyId\" >\r\n                          <option value=\"0\" > 운수사 선택 </option>\r\n                          {\r\n                            vendordata.map((item, index) => {\r\n\r\n                              return (\r\n                                <option value={item.companyId}>{item.companyName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 충전소</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"csId\" id=\"csId\" defaultValue={csIdvalue} onChange={e => chargerSelect(e)}>\r\n                          <option value=\"0\" >::: 선택하세요::: </option>\r\n                          {\r\n                            csdata.map((item, index) => {\r\n                              return (\r\n                                <option value={item.csId}>[{item.companyId}]- {item.csName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                      </CInputGroup>\r\n                    </div>\r\n                  </form>\r\n                }\r\n\r\n\r\n                {userinfo.grade === \"2\" &&\r\n                  <form name=\"schform\" id=\"schform\" metghod=\"post\">\r\n                    <div style={{ paddingBottom: \"5px\", float: \"left\" }}>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 운수사</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"companyId\" maxLength=\"5\" name=\"companyId\" value={userinfo.vendorid} placeholder=\"\" readOnly />\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 충전소</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"csId\" id=\"csId\" defaultValue={csIdvalue} onChange={e => chargerSelect(e)}>\r\n                          <option value=\"0\" >::: 선택하세요::: </option>\r\n                          {\r\n                            csdata.map((item, index) => {\r\n                              return (\r\n                                <option value={item.csId}>[{item.companyId}]- {item.csName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                      </CInputGroup>\r\n                    </div>\r\n                  </form>\r\n                }\r\n\r\n                {userinfo.grade === \"3\" &&\r\n                  <form name=\"schform\" id=\"schform\" metghod=\"post\">\r\n                    <div style={{ paddingBottom: \"5px\", float: \"left\" }}>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 운수사</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"companyId\" maxLength=\"5\" name=\"companyId\" value={userinfo.vendorid} placeholder=\"\" readOnly />\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 충전소</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"csId\" maxLength=\"5\" name=\"csId\" value={userinfo.csid} placeholder=\"\" readOnly />\r\n\r\n                      </CInputGroup>\r\n\r\n\r\n\r\n                    </div>\r\n                  </form>\r\n                }\r\n\r\n\r\n                <CDataTable\r\n                  items={items}\r\n                  fields={fields}\r\n                  striped\r\n                  sorter\r\n                  pagination\r\n                  itemsPerPage={pagesize}\r\n                  clickableRows\r\n\r\n                  scopedSlots={{\r\n                    '운수사':\r\n                      (item) => (\r\n                        <td style={{ verticalAlign: \"middle\" }}>\r\n                          {\r\n                            item.companyname.map((item, index) => {\r\n                              return (\r\n                                <CBadge className=\"mr-1\" color=\"\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{item.companyName}</CBadge>\r\n                              )\r\n                            })\r\n                          }\r\n                        </td>\r\n                      ),\r\n                    '충전소':\r\n                      (item) => (\r\n                        <td style={{ verticalAlign: \"middle\" }}>\r\n                          {\r\n                            item.csname.map((item, index) => {\r\n                              return (\r\n                                <CBadge className=\"mr-1\" color=\"\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{item.csName}\r\n\r\n                                </CBadge>\r\n                              )\r\n                            })\r\n                          }\r\n                        </td>\r\n                      ),\r\n                    '충전기 정보':\r\n                      (item) => (\r\n                        <td style={{ verticalAlign: \"middle\" }}>\r\n                          <img width=\"80px\" src=\"/charger.png\"></img>\r\n                          <div>\r\n                            <CBadge className=\"mr-1\" color=\"\" style={{ fontSize: \"14px\" }}>충전소 :{item.csId}</CBadge>/\r\n                            <CBadge className=\"mr-1\" color=\"\" style={{ fontSize: \"14px\" }}>충전건 개수:{item.connectorNo}</CBadge>\r\n                          </div>\r\n                        </td>\r\n                      ),\r\n                    '상태':\r\n                      (item) => (\r\n                        <td style={{ verticalAlign: \"middle\" }}>\r\n                          {item.status === \"Disconnected\" && <CBadge className=\"mr-1\" color=\"primary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>접속 끊김</CBadge>}\r\n                          {item.status === \"Available\" && <img width=\"100px\" src=\"/mo_img2.png\" alt=\"\" />}\r\n                          {item.status === \"Preparing\" && <CBadge className=\"mr-1\" color=\"primary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>충전대기중</CBadge>}\r\n                          {item.status === \"Charging\" && <img width=\"100px\" src=\"/mo_img1.gif\" alt=\"\" />}\r\n                          {item.status === \"Finishing\" && <CBadge className=\"mr-1\" color=\"primary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>고장</CBadge>}\r\n                          {item.status === \"SuspendedEVSE\" && <CBadge className=\"mr-1\" color=\"primary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>허용하지 않는 상태</CBadge>}\r\n                          {item.status === \"SuspendedEV\" && <CBadge className=\"mr-1\" color=\"primary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>충전 전력 못받음</CBadge>}\r\n                          {item.status === \"Reserved\" && <CBadge className=\"mr-1\" color=\"primary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>충전예약 명령 이미 있음</CBadge>}\r\n                          {item.status === \"Unavailable\" && <CBadge className=\"mr-1\" color=\"primary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>커넥터 사용할수 없음</CBadge>}\r\n                          {item.status === \"Faulted\" && <CBadge className=\"mr-1\" color=\"primary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>오류로 충전이 불가능</CBadge>}\r\n                          {item.status === \"Stop\" && <CBadge className=\"mr-1\" color=\"primary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>사용안함</CBadge>}\r\n                          {item.status === \"Delete\" && <CBadge className=\"mr-1\" color=\"primary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>삭제</CBadge>}\r\n\r\n                        </td>\r\n                      ),\r\n\r\n                    '모델명':\r\n                      (item) => (\r\n                        <td style={{ verticalAlign: \"middle\" }}>{item.modelNo}</td>\r\n                      ),\r\n                    '충전기 제조사':\r\n                      (item) => (\r\n                        <td style={{ verticalAlign: \"middle\" }}>{item.manufacturer}</td>\r\n                      ),\r\n\r\n                    '충전기 상태 설정':\r\n                      (item) => (\r\n                        <td style={{ verticalAlign: \"middle\" }}>\r\n                          <CInputGroup>\r\n                            <CInputGroupPrepend>\r\n                              <CInputGroupText> 충전건A</CInputGroupText>\r\n                            </CInputGroupPrepend>\r\n                            <CSelect custom name=\"select\" id=\"companyId\" defaultValue={vendorIdvalue} onChange={e => ChargerStationList(e)} name=\"companyId\" >\r\n                              <option value=\"0\" > 운영중 </option>\r\n\r\n                            </CSelect>\r\n                          </CInputGroup>\r\n                          <br />\r\n                          <CInputGroup>\r\n                            <CInputGroupPrepend>\r\n                              <CInputGroupText> 충전건B</CInputGroupText>\r\n                            </CInputGroupPrepend>\r\n                            <CSelect custom name=\"select\" id=\"companyId\" defaultValue={vendorIdvalue} onChange={e => ChargerStationList(e)} name=\"companyId\" >\r\n                              <option value=\"0\" > 운영중 </option>\r\n\r\n                            </CSelect>\r\n                          </CInputGroup>\r\n                          <br />\r\n                          <CInputGroup>\r\n                            <CInputGroupPrepend>\r\n                              <CInputGroupText> RESET</CInputGroupText>\r\n                            </CInputGroupPrepend>\r\n                            <CSelect custom name=\"csId\" id=\"csId\" defaultValue={csIdvalue} onChange={e => chargerSelect(e)}>\r\n                              <option value=\"0\" >충전기 </option>\r\n\r\n                            </CSelect>\r\n                          </CInputGroup>\r\n                        </td>\r\n                      )\r\n                  }}\r\n                />\r\n\r\n              </CCardBody>\r\n            </CCard>\r\n          </CRow>\r\n        </CCol>\r\n\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Chargerinfo","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow\r\n} from '@coreui/react'\r\n\r\n\r\nconst Modals = (props) => {\r\n\r\n  const [modal, setModal] = useState(true)\r\n  const [large, setLarge] = useState(false)\r\n  const [small, setSmall] = useState(false)\r\n  const [primary, setPrimary] = useState(false)\r\n  const [success, setSuccess] = useState(false)\r\n  const [warning, setWarning] = useState(false)\r\n  const [danger, setDanger] = useState(false)\r\n  const [info, setInfo] = useState(false)\r\n  const [ermsg, setErmsg] = useState(\"Error !!\")\r\n  useEffect(() => {\r\n    if (props.data.mode === true) {\r\n      setWarning(!warning);\r\n    } else {\r\n      setWarning(warning);\r\n    }\r\n    setErmsg(\"<div style='padding-top:20px;'><span>\" + props.data.msg + \"</span></div>\")\r\n  }, [props]);\r\n\r\n  const setClose = () => {\r\n    props.fnc(false);\r\n    setWarning(!warning);\r\n  }\r\n\r\n  return (\r\n    <CModal\r\n      show={warning}\r\n      onClose={() => setWarning(!warning)}\r\n      color={props.data.color}\r\n    >\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>TOC System POPUP</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody id=\"txtmsg\" style={{ textAlign: 'center', paddingTop: \"30px\", paddingBottom: \"30px\" }} dangerouslySetInnerHTML={{ __html: ermsg }}>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        {props.mode === \"save\" && <CButton id=\"btn_modal_save\" color=\"warning\" onClick={() => props.handleClick()}>저장</CButton>}\r\n        {props.mode === \"del\" && <CButton id=\"btn_modal_del\" color=\"warning\" onClick={() => props.delClick()}>삭제</CButton>}\r\n        <CButton color=\"secondary\" onClick={() => setClose()}>닫기</CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n\r\n  )\r\n}\r\n\r\nexport default Modals"],"sourceRoot":""}