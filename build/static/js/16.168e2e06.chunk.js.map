{"version":3,"sources":["views/contents/Lineinfo.js","views/modals/Modals.js"],"names":["defaultValue","_id","vendorId","line_num","line_name","Lineinfo","fields1","key","_classes","isMobile","fields2","useCookies","cookies","configHeader","headers","Authorization","TocToken","useState","mode","msg","color","warning","setModal","GV","vendorTablepagesize","pagesize","fields","setFields","setMode","detaildata","setDetailData","vendordata","setVendorData","csdata","setCsData","csdata1","setCsData1","vendorIdvalue","setVendorIdvalue","csIdvalue","setCsIdvalue","setGradevalue","items","setItems","setLoading","UTIL","userinfo","warning3","setModal3","modal","setModal1","countpage","setCountPage","useEffect","grade","listdata","status","params","axios","post","process","then","result","data","docs","slice","catch","err","change4","change3","handleScroll","scrollHeight","document","documentElement","scrollTop","clientHeight","companyId","$","val","csId","getList12","change20","window","addEventListener","removeEventListener","getList","change","e","change2","target","value","handleClick","a","txt","url","frmstrroutname","frmstrrouteno","frmstrcompnayId","frmstrcsId","frmstrstartnodenm","frmstrendnodenm","frmstrcityname","sendinfcreate","startnodenm","routeno","routename","endnodenm","cityname","toggle","change15","text","JSON","stringify","errmsg","hide","alert","delClick","show","html","closemodal","setTableClose","vendorid","onClose","closeButton","id","style","textAlign","paddingTop","paddingBottom","onClick","fnc","width","position","float","block","fadeOut","reset","name","metghod","custom","onChange","map","item","index","companyName","csName","type","maxLength","placeholder","readOnly","csid","striped","sorter","pagination","itemsPerPage","clickableRows","onRowClick","scrollTo","top","left","behavior","getDetail","scopedSlots","cpname","className","padding","fontSize","csname","length","display","disabled","insertModal","size","action","method","change13","Modals","props","setWarning","ermsg","setErmsg","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"static/js/16.168e2e06.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CButton,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CSelect,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter\r\n} from '@coreui/react'\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\nimport * as UTIL from 'src/util/Fnc'\r\nimport { useCookies } from 'react-cookie';\r\nimport MODAL from '../modals/Modals';\r\nimport GV from '../../globalSet'\r\nimport { isMobile } from 'react-device-detect';\r\n\r\n\r\nconst defaultValue = [{ _id: \"\", vendorId: \"\", line_num: \"\", line_name: \"\" }];\r\nconst Lineinfo = () => {\r\n\r\n  // 페이지내 글로벌 변수 정의  START:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\r\n  var fields1 = [{ key: '운수사', _classes: 'Tablefirst' }, { key: '충전소', _classes: 'Tablefirst' }, { key: '노선번호', _classes: 'Tablefirst' }, { key: '운행도시', _classes: 'Tablefirst' }, { key: '운행정보', _classes: 'Tablefirst' }]\r\n  if (isMobile) { fields1 = [{ key: '소속충전소', _classes: 'Tablefirst' }, { key: '노선번호', _classes: 'Tablefirst' }, { key: '운행도시', _classes: 'Tablefirst' }] }\r\n  var fields2 = [{ key: '운수사', _classes: 'Tablefirst' }, { key: '충전소', _classes: 'Tablefirst' }, { key: '노선번호', _classes: 'Tablefirst' }]\r\n  if (isMobile) { fields2 = [{ key: '소속충전소', _classes: 'Tablefirst' }, { key: '노선번호', _classes: 'Tablefirst' }, { key: '운행도시', _classes: 'Tablefirst' }] }\r\n  const [cookies] = useCookies(['token']);  //Auth    \r\n  const configHeader = { headers: { Authorization: `Bearer ${cookies.TocToken}` } } // axios 전송을 위한 헤더값 세팅\r\n  const [warning, setModal] = useState({ mode: false, msg: \"\", color: \"info\" });    // 모달 팝업용\r\n  const [pagesize, setPageSize] = useState(GV.vendorTablepagesize);\r\n  const [fields, setFields] = useState(fields1)\r\n  const [mode, setMode] = useState(\"alert\");\r\n  const [detaildata, setDetailData] = useState(defaultValue);\r\n  const [vendordata, setVendorData] = useState([]);\r\n  const [csdata, setCsData] = useState([]);\r\n  const [csdata1, setCsData1] = useState([]);\r\n  const [vendorIdvalue, setVendorIdvalue] = useState(\"\");   // 사용자 추가시 벤더아이디 설정 \r\n  const [csIdvalue, setCsIdvalue] = useState(\"\");   // 사용자 추가시 벤더아이디 설정 \r\n  const [gradevalue, setGradevalue] = useState(\"\");   // 사용자 추가시 권한 설정\r\n  // 라이브 페이징을 위한 정의  START\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [itemsPerPage, setItemsPerPage] = useState(5);\r\n  const [userinfo] = useState(UTIL.getUserInfo(cookies))\r\n\r\n  const [warning3, setModal3] = useState(\"\");\r\n  const [modal, setModal1] = useState(false);\r\n  const [countpage, setCountPage] = useState(25)\r\n\r\n  // 라이브 페이징을 위한 정의  END\r\n\r\n  useEffect(() => {\r\n    if (userinfo.grade === \"0\") {\r\n      let listdata = { status: 1, params: pagesize }  // 리스트 출력 기본 세팅값 정의\r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/linevendor\", listdata, configHeader).then(result => {\r\n        setItems(result.data.data.docs.slice(0, 15));\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      });\r\n    } else {\r\n      change4();\r\n      change3();\r\n    }\r\n  }, []);\r\n\r\n\r\n  const handleScroll = () => {\r\n    const scrollHeight = document.documentElement.scrollHeight;\r\n    const scrollTop = document.documentElement.scrollTop;\r\n    const clientHeight = document.documentElement.clientHeight;\r\n    let companyId = $('#schform [name=\"companyId\"]').val();\r\n    let csId = $('#schform [name=\"csId\"]').val();\r\n    if (scrollTop + clientHeight >= scrollHeight) {\r\n      if (userinfo.grade === \"0\") {\r\n        if (companyId === \"0\" && csId === \"0\") {\r\n          setCountPage(countpage + 10)\r\n          getList12()\r\n        } else {\r\n          setCountPage(countpage + 10)\r\n          change20();\r\n        }\r\n      } else {\r\n        setCountPage(countpage + 10)\r\n        change4();\r\n        change20();\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // scroll event listener 등록\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      // scroll event listener 해제\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  });\r\n\r\n\r\n  const getList12 = () => {\r\n    let listdata = { status: 1, params: pagesize }   // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/linevendor\", listdata, configHeader).then(result => {\r\n      setItems(result.data.data.docs.slice(0, countpage));\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    });\r\n  }\r\n\r\n\r\n  // 사용자 리스트 호출 함수 \r\n  const getList = () => {\r\n    let listdata = { status: 1, params: pagesize }   // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/linevendor\", listdata, configHeader).then(result => {\r\n      setItems(result.data.data.docs.slice(0, 15));\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    });\r\n  }\r\n\r\n  //d운수사 리스트\r\n  useEffect(() => {\r\n    let listdata = { status: 1, pagesize: pagesize }  // 리스트 출력 기본 세팅값 정의 \r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/vendorlist\", listdata, configHeader).then(result => {\r\n      setVendorData(result.data.data)\r\n    }).catch(err => {\r\n\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }, [])\r\n\r\n\r\n  // 운수사 상세정보 호출 함수\r\n  const getDetail = (_id) => {\r\n    $(\"#insert\").hide()\r\n    $(\"#detail\").show()\r\n    $(\"#frmadd\")[0].reset();\r\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\r\n    let listdata = { _id: _id }\r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/linedetail\", listdata, configHeader).then(result => {\r\n      setDetailData(result.data.data);\r\n      setVendorIdvalue(result.data.data[0].companyId)\r\n      setCsIdvalue(result.data.data[0].csId)\r\n\r\n      change();\r\n      setFields(fields2);\r\n      // 상세정보 호출시 입력화면에 쓰기 및 애니메이션 처리  ---------\r\n      UTIL.writeani('open')\r\n      // 상세정보 호출시 입력화면에 쓰기 및 애니메이션 처리  ---------\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    });\r\n  }\r\n\r\n  const setTableOpen = () => {\r\n    $(\"#detail\").hide()\r\n    $(\"#insert\").show();\r\n    $(\"#dateviewbtn\").fadeOut();\r\n    setDetailData(defaultValue)\r\n    closemodal();    // 모달 팝업창 닫기(false)\r\n    $(\"#frmadd\")[0].reset();\r\n    setModal(false);\r\n    setFields(fields2);\r\n    if (userinfo.grade != \"0\") {\r\n      change4();\r\n    }\r\n    UTIL.writeani('open')\r\n  }\r\n\r\n  const insertModal = (_id) => {\r\n\r\n    $(\"#detail\").hide()\r\n    $(\"#insert\").show();\r\n    $(\"#dateviewbtn\").show();\r\n    $(\"#frmadd\")[0].reset();\r\n    setModal(false);\r\n    setFields(fields2);\r\n\r\n    let listdata = { _id: _id }\r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/linedetail\", listdata, configHeader).then(result => {\r\n      setDetailData(result.data.data);\r\n      setVendorIdvalue(result.data.data[0].companyId);\r\n      setGradevalue(result.data.data[0].grade)\r\n      setFields(fields2);\r\n      setCsIdvalue(result.data.data[0].csId)\r\n      change();\r\n\r\n      if (userinfo.grade != \"0\") {\r\n        change4();\r\n      }\r\n      UTIL.writeani('open')\r\n      // 상세정보 호출시 입력화면에 쓰기 및 애니메이션 처리  ---------\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const change13 = (e) => {\r\n    if (userinfo.grade === \"0\") {\r\n      setVendorIdvalue(e.target.value)\r\n      let listdata = { status: 1, pagesize: pagesize, companyId: e.target.value }  // 리스트 출력 기본 세팅값 정의\r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n        setCsData1(result.data.data)\r\n\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      })\r\n    }\r\n  }\r\n\r\n  // 소속업체 선택시 소속 충전소 정보 호출하기\r\n  const change = (e) => {\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: vendorIdvalue }  // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n      setCsData1(result.data.data)\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n  //충전소 선택시 해당 충전소에서 운행중인 라인정보 호출\r\n  const change2 = (e) => {\r\n    setCsIdvalue(e.target.value)\r\n    UTIL.getLineinfo(configHeader, e.target.value, \"\");\r\n\r\n  }    // 벤더사 선택시 state 변경 \r\n\r\n  const handleClick = async () => {\r\n    let txt = \"\";\r\n    let url = \"/api/pages/updateline\";\r\n\r\n    if ($('#frmadd [name=\"id\"]').val()) {\r\n      txt = \"수정\";\r\n      url = \"/api/pages/updateline/\" + $('#frmadd [name=\"id\"]').val();\r\n    } else {\r\n      txt = \"등록\";\r\n      url = \"/api/pages/insertline\";\r\n    }\r\n\r\n    let frmstrroutname = $('#frmadd [name=\"routename1\"]').val();\r\n    let frmstrrouteno = $('#frmadd [name=\"routeno1\"]').val();\r\n    let frmstrcompnayId = $('#frmadd [name=\"companyId1\"]').val();\r\n    let frmstrcsId = $('#frmadd [name=\"csId1\"]').val();\r\n    let frmstrstartnodenm = $('#frmadd [name=\"startnodenm1\"]').val();\r\n    let frmstrendnodenm = $('#frmadd [name=\"endnodenm1\"]').val();\r\n    let frmstrcityname = $('#frmadd [name=\"cityname1\"]').val();\r\n\r\n    let sendinfcreate = {\r\n      companyId: frmstrcompnayId,   // 벤더아이디\r\n      csId: frmstrcsId,   // 벤더아이디           \r\n      startnodenm: frmstrstartnodenm,      // 노선 번호\r\n      routeno: frmstrrouteno,   // 노선 명\r\n      routename: frmstrroutname,\r\n      endnodenm: frmstrendnodenm,    // 기타정보\r\n      cityname: frmstrcityname,\r\n      pagesize: GV.vendorTablepagesize\r\n    }\r\n\r\n    if (txt === \"수정\") {\r\n      axios.post(process.env.REACT_APP_APISERVER + url, sendinfcreate, configHeader).then(result => {\r\n        if (result.data.status === 1) {\r\n          if (userinfo.grade === \"0\") {\r\n            let companyId12 = $('#schform [name=\"companyId\"]').val();\r\n            if (companyId12 == 0) {\r\n              getList();\r\n              setFields(fields1);\r\n              UTIL.writeani('close')\r\n              toggle()\r\n            } else {\r\n              setFields(fields1);\r\n              UTIL.writeani('close')\r\n              toggle();\r\n              change15();\r\n            }\r\n          } else {\r\n            change3();\r\n            setFields(fields1);\r\n            UTIL.writeani('close')\r\n            toggle();\r\n          }\r\n\r\n        } else {\r\n\r\n          if (result.data.status === 9) {\r\n            $(\"#txtmsg\").text(JSON.stringify(result.data.errmsg[0].msg))\r\n            $(\"#btn_modal_save\").hide();\r\n            //setErrmsg(result.data.errmsg[0].msg)\r\n          } else {\r\n            $(\"#txtmsg\").text(\"등록실패\")\r\n            $(\"#btn_modal_save\").hide();\r\n          }\r\n\r\n        }\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      })\r\n    } else {\r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/linecheck\", { routeno: frmstrrouteno }, configHeader).then(result => {\r\n        if (result.data.data === 2) {\r\n          alert(\"사용중인 노선 번호 입니다\")\r\n          toggle();\r\n          return false\r\n        } else {\r\n          axios.post(process.env.REACT_APP_APISERVER + url, sendinfcreate, configHeader).then(result => {\r\n\r\n            if (result.data.status === 1) {\r\n              if (userinfo.grade === \"0\") {\r\n                let companyId12 = $('#schform [name=\"companyId\"]').val();\r\n                if (companyId12 == 0) {\r\n                  getList();\r\n                  setFields(fields1);\r\n                  UTIL.writeani('close')\r\n                  toggle()\r\n                } else {\r\n                  setFields(fields1);\r\n                  UTIL.writeani('close')\r\n                  toggle();\r\n                  change15();\r\n                }\r\n              } else {\r\n                change3();\r\n                setFields(fields1);\r\n                UTIL.writeani('close')\r\n                toggle();\r\n              }\r\n\r\n            } else {\r\n\r\n              if (result.data.status === 9) {\r\n                $(\"#txtmsg\").text(JSON.stringify(result.data.errmsg[0].msg))\r\n                $(\"#btn_modal_save\").hide();\r\n                //setErrmsg(result.data.errmsg[0].msg)\r\n              } else {\r\n                $(\"#txtmsg\").text(\"등록실패\")\r\n                $(\"#btn_modal_save\").hide();\r\n              }\r\n\r\n            }\r\n          }).catch(err => {\r\n            setModal(UTIL.api401chk(err));\r\n          })\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  const delClick = async () => {\r\n    let frmstrrouteno = $('#frmadd [name=\"routeno\"]').val();\r\n    let sendinfcreate = {\r\n      routeno: frmstrrouteno,\r\n      status: 0\r\n    }\r\n\r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/linedelete/\" + $('#frmadd [name=\"id\"]').val(), sendinfcreate, configHeader).then(result => {\r\n\r\n      if (result.data.status === 1) {\r\n        if (userinfo.grade != \"0\") {\r\n          change4();\r\n          change3();\r\n          setFields(fields1);\r\n          UTIL.writeani('close')\r\n          toggle();\r\n        } else {\r\n          getList();\r\n          setFields(fields1);\r\n          UTIL.writeani('close')\r\n          toggle()\r\n        }\r\n      } else {\r\n\r\n        if (result.data.status === 9) {\r\n          $(\"#txtmsg\").text(JSON.stringify(result.data.errmsg[0].msg))\r\n          $(\"#btn_modal_save\").hide();\r\n        } else {\r\n          $(\"#txtmsg\").text(\"등록실패\")\r\n          $(\"#btn_modal_save\").hide();\r\n        }\r\n\r\n      }\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n  const toggle = () => {\r\n    let txt = \"\";\r\n    setMode('save'); $(\"#btn_modal_save\").show(); $(\"#txtmsg\").html(\"저장하시겠습니까?\");\r\n    if ($('#frmadd [name=\"id\"]').val()) { txt = \"수정\"; } else { txt = \"등록\"; }\r\n    setModal3('버스 정보를 ' + txt + '하시겠습니까?')\r\n    setModal1(!modal);\r\n  }\r\n\r\n\r\n  const deltoggle = () => {\r\n    let txt = \"삭제\";\r\n    setMode('del');\r\n    setModal3('버스 정보를 ' + txt + '하시겠습니까?')\r\n    setModal1(!modal);\r\n  }\r\n\r\n  const closemodal = () => {\r\n    setModal(!warning);\r\n  }\r\n\r\n  const setTableClose = () => {\r\n    setModal(false);\r\n    setDetailData(defaultValue)\r\n    UTIL.writeani('close')\r\n    setFields(fields1);\r\n  }\r\n\r\n  const change4 = (e) => {\r\n    if (userinfo.grade === \"0\") {\r\n      setVendorIdvalue(e.target.value)\r\n      let listdata = { status: 1, pagesize: pagesize, companyId: e.target.value }  // 리스트 출력 기본 세팅값 정의\r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n        setCsData(result.data.data)\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      })\r\n    } else {\r\n      let listdata = { status: 1, pagesize: pagesize, companyId: userinfo.vendorid }  // 리스트 출력 기본 세팅값 정의 \r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n        setCsData(result.data.data)\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  const change15 = () => {\r\n    let url = \"/api/pages/linelistselect\";\r\n\r\n    let companyId = $('#schform [name=\"companyId\"]').val();\r\n    let csId = $('#schform [name=\"csId\"]').val();\r\n\r\n    if (companyId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 충전소를 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    if (csId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 검색 시작일과 종료일을 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: companyId, csId: csId }  // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + url, listdata, configHeader).then(result => {\r\n      setItems(result.data.data.docs);\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  const change3 = (e) => {\r\n    if (userinfo.grade === \"0\") {\r\n      setCsIdvalue(e.target.value)\r\n    }\r\n    let url = \"/api/pages/linelistselect\";\r\n\r\n    let companyId = $('#schform [name=\"companyId\"]').val();\r\n    let csId = $('#schform [name=\"csId\"]').val();\r\n\r\n    if (companyId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 충전소를 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    if (csId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 검색 시작일과 종료일을 반드시 선택해주세요');\r\n      return;\r\n    }\r\n    UTIL.writeani('close')\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: companyId, csId: csId }  // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + url, listdata, configHeader).then(result => {\r\n      setItems(result.data.data.docs.slice(0, 15));\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n  const change20 = (e) => {\r\n    let url = \"/api/pages/linelistselect\";\r\n    let companyId = $('#schform [name=\"companyId\"]').val();\r\n    let csId = $('#schform [name=\"csId\"]').val();\r\n\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: companyId, csId: csId }  // 리스트 출력 기본 세팅값 정의\r\n    axios.post(process.env.REACT_APP_APISERVER + url, listdata, configHeader).then(result => {\r\n      setItems(result.data.data.docs.slice(0, countpage));\r\n      setLoading(false);\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CModal\r\n        show={modal}\r\n        onClose={toggle}\r\n        color=\"danger\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>TOC System POPUP</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody id=\"txtmsg\" style={{ textAlign: 'center', paddingTop: \"30px\", paddingBottom: \"30px\" }} >\r\n          {warning3}\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          {mode === \"save\" && <CButton color=\"primary\" onClick={handleClick} >저장 </CButton>}\r\n          {mode === \"del\" && <CButton color=\"primary\" onClick={delClick} >삭제 </CButton>}\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={toggle}\r\n          >Cancel</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CRow>\r\n        <CCol>\r\n          <MODAL data={warning} fnc={closemodal} mode={mode} handleClick={handleClick} delClick={delClick}></MODAL>\r\n          <CRow>\r\n\r\n            <CCard id=\"listtable2\" style={{ width: \"100%\", position: \"relative\", float: \"left\" }}>\r\n              <CCardHeader>\r\n                노선 리스트\r\n                <div style={{ paddingBottom: \"5px\", float: \"right\" }}>\r\n                  <CButton block color=\"info\" onClick={setTableOpen}>노선 등록</CButton>\r\n                </div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                {userinfo.grade === \"0\" &&\r\n                  <form name=\"schform\" id=\"schform\" metghod=\"post\">\r\n                    <div style={{ paddingBottom: \"5px\", float: \"left\" }}>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 운수사</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"select\" id=\"companyId\" defaultValue={vendorIdvalue} onChange={e => change4(e)} name=\"companyId\" >\r\n                          <option value=\"0\" > 운수사 선택 </option>\r\n                          {\r\n                            vendordata.map((item, index) => {\r\n\r\n                              return (\r\n                                <option value={item.companyId}>{item.companyName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 충전소</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"csId\" id=\"csId\" defaultValue={csIdvalue} onChange={e => change3(e)}>\r\n                          <option value=\"0\" >::: 선택하세요::: </option>\r\n                          {\r\n                            csdata.map((item, index) => {\r\n                              return (\r\n                                <option value={item.csId}>[{item.companyId}]- {item.csName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                      </CInputGroup>\r\n                    </div>\r\n                  </form>\r\n                }\r\n\r\n\r\n                {userinfo.grade === \"2\" &&\r\n                  <form name=\"schform\" id=\"schform\" metghod=\"post\">\r\n                    <div style={{ paddingBottom: \"5px\", float: \"left\" }}>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 운수사</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"companyId\" maxLength=\"5\" name=\"companyId\" value={userinfo.vendorid} placeholder=\"\" readOnly />\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 충전소</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"csId\" id=\"csId\" defaultValue={csIdvalue} onChange={e => change3(e)}>\r\n                          <option value=\"0\" >::: 선택하세요::: </option>\r\n                          {\r\n                            csdata.map((item, index) => {\r\n                              return (\r\n                                <option value={item.csId}>[{item.companyId}]- {item.csName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                      </CInputGroup>\r\n                    </div>\r\n                  </form>\r\n                }\r\n\r\n                {userinfo.grade === \"3\" &&\r\n                  <form name=\"schform\" id=\"schform\" metghod=\"post\">\r\n                    <div style={{ paddingBottom: \"5px\", float: \"left\" }}>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 운수사</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"companyId\" maxLength=\"5\" name=\"companyId\" value={userinfo.vendorid} placeholder=\"\" readOnly />\r\n\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 충전소</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"csId\" maxLength=\"5\" name=\"csId\" value={userinfo.csid} placeholder=\"\" readOnly />\r\n                      </CInputGroup>\r\n                    </div>\r\n                  </form>\r\n                }\r\n\r\n\r\n\r\n                <CDataTable\r\n                  items={items}\r\n                  fields={fields}\r\n                  striped\r\n                  sorter\r\n                  pagination\r\n                  itemsPerPage={pagesize}\r\n                  clickableRows\r\n                  onRowClick={(item) => getDetail(item._id)}\r\n                  scopedSlots={{\r\n                    '운수사':\r\n                      (item) => (\r\n\r\n                        <td>\r\n\r\n                          {\r\n                            item.cpname.map((item, index) => {\r\n                              return (\r\n                                <CBadge className=\"mr-1\" color=\"secondary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{item.companyName}</CBadge>\r\n                              )\r\n                            })\r\n                          }\r\n\r\n                        </td>\r\n\r\n                      ),\r\n                    '충전소':\r\n                      (item) => (\r\n                        <td>\r\n                          {item.csname.length === 0 && <CBadge className=\"mr-1\" color=\"primary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>등록된 충전소 없음</CBadge>}\r\n                          {\r\n                            item.csname.map((item, index) => {\r\n                              return (\r\n                                <CBadge className=\"mr-1\" color=\"primary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{item.csName}</CBadge>\r\n                              )\r\n                            })\r\n                          }\r\n                        </td>\r\n                      ),\r\n                    '노선번호':\r\n                      (item) => (\r\n                        <td>\r\n                          <CBadge className=\"mr-1\" color=\"primary\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{item.routeno}</CBadge>\r\n                        </td>\r\n                      ),\r\n                    '운행도시':\r\n                      (item) => (\r\n                        <td>{item.cityname}</td>\r\n                      ),\r\n                    '운행정보':\r\n                      (item) => (\r\n                        <td>{item.startnodenm} ~ {item.endnodenm}</td>\r\n                      )\r\n                  }}\r\n                />\r\n\r\n              </CCardBody>\r\n            </CCard>\r\n\r\n\r\n            <CCard id=\"writefrm\" style={{ width: \"45%\", position: \"relative\", float: \"left\", display: \"none\" }}>\r\n              <div id=\"detail\" style={{ display: \"none\" }}>\r\n                <CCardHeader>\r\n                  노선 상세 정보\r\n                </CCardHeader>\r\n                <CCardBody>\r\n\r\n                  <input type=\"hidden\" name=\"id\" id=\"id\" defaultValue={detaildata[0]._id} />\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> 운수사</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CSelect custom name=\"select\" id=\"companyId\" value={detaildata[0].companyId} onChange={e => change(e)} name=\"companyId\" disabled=\"disabled\">\r\n                        <option value=\"0\" disabled=\"disabled\"> ::: 선택하세요 :::</option>\r\n                        {\r\n                          vendordata.map((item, index) => {\r\n                            var a = detaildata[0].companyId === item.companyId ? ' selected' : ''\r\n                            return (\r\n                              <option value={item.companyId}>{item.companyName}</option>\r\n                            )\r\n                          })\r\n                        }\r\n                      </CSelect>\r\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> 충전소</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CSelect custom name=\"csId\" id=\"csId\" value={detaildata[0].csId} onChange={e => change2(e)} disabled=\"disabled\">\r\n                        <option value=\"0\" disabled=\"disabled\"> ::: 선택하세요 :::</option>\r\n                        {\r\n                          csdata1.map((item, index) => {\r\n                            return (\r\n                              <option value={item.csId}>[ {item.companyId} ] - {item.csName}</option>\r\n                            )\r\n                          })\r\n                        }\r\n                      </CSelect>\r\n\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n\r\n\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> * 노선번호</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" id=\"routeno\" name=\"routeno\" defaultValue={detaildata[0].routeno} readOnly />\r\n                      &nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>노선명</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" id=\"routeno\" name=\"routename\" defaultValue={detaildata[0].routename} readOnly />\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n\r\n\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>  출발지</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" id=\"startnodenm\" name=\"startnodenm\" defaultValue={detaildata[0].startnodenm} readOnly />\r\n                      &nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>  도착지</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" id=\"endnodenm\" name=\"endnodenm\" defaultValue={detaildata[0].endnodenm} readOnly />\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>  운행시도</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" id=\"cityname\" name=\"cityname\" defaultValue={detaildata[0].cityname} placeholder=\"도시이름\" readOnly />\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n\r\n                  <CFormGroup className=\"form-actions\">\r\n                    <CButton type=\"button\" onClick={() => insertModal(detaildata[0]._id)} size=\"bg\" color=\"success\" style={{ width: \"100px\" }}> 수정</CButton>\r\n                    <CButton type=\"button\" onClick={setTableClose} size=\"bg\" color=\"success\" style={{ float: \"right\", width: \"100px\" }}>닫기</CButton>\r\n                  </CFormGroup>\r\n\r\n\r\n                </CCardBody>\r\n              </div>\r\n\r\n\r\n\r\n              <div id=\"insert\" style={{ display: \"none\" }}>\r\n                <CCardHeader>\r\n                  노선 정보 입력\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  <CForm action=\"\" name=\"frmadd\" id=\"frmadd\" method=\"post\">\r\n                    <input type=\"hidden\" name=\"id\" id=\"id\" defaultValue={detaildata[0]._id} />\r\n                    {userinfo.grade === \"0\" &&\r\n                      <CFormGroup>\r\n                        <CInputGroup>\r\n                          <CInputGroupPrepend>\r\n                            <CInputGroupText> 운수사</CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n\r\n                          <CSelect custom name=\"select\" id=\"companyId\" value={detaildata[0].companyId} onChange={e => change13(e)} name=\"companyId1\" disabled={detaildata[0].companyId}>\r\n                            <option value=\"0\" disabled={detaildata[0].companyId}> ::: 선택하세요 :::</option>\r\n                            {\r\n                              vendordata.map((item, index) => {\r\n                                var a = detaildata[0].companyId === item.companyId ? ' selected' : ''\r\n                                return (\r\n                                  <option value={item.companyId}>{item.companyName}</option>\r\n                                )\r\n                              })\r\n                            }\r\n                          </CSelect>\r\n\r\n\r\n                          &nbsp; &nbsp; &nbsp;\r\n                          <CInputGroupPrepend>\r\n                            <CInputGroupText> 충전소</CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <CSelect custom name=\"csId1\" id=\"csId\" value={csIdvalue} onChange={e => change2(e)} disabled={detaildata[0].csId}>\r\n                            <option value=\"0\" disabled={detaildata[0].csId}>::: 선택하세요::: </option>\r\n                            {\r\n                              csdata1.map((item, index) => {\r\n                                return (\r\n                                  <option value={item.csId}>[{item.companyId}]- {item.csName}</option>\r\n                                )\r\n                              })\r\n                            }\r\n                          </CSelect>\r\n                        </CInputGroup>\r\n                      </CFormGroup>\r\n                    }\r\n\r\n                    {userinfo.grade === \"2\" &&\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 운수사</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"select\" id=\"companyId\" value={userinfo.vendorid} onChange={e => change4(e)} name=\"companyId1\" disabled=\"disabled\">\r\n                          <option value=\"0\" disabled=\"disabled\"> 운수사 선택 </option>\r\n                          {\r\n                            vendordata.map((item, index) => {\r\n\r\n                              return (\r\n                                <option value={item.companyId}>{item.companyName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 충전소</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"csId1\" id=\"csId\" value={csIdvalue} onChange={e => change2(e)} disabled={detaildata[0].csId}>\r\n                          <option value=\"0\" disabled={detaildata[0].csId}>::: 선택하세요::: </option>\r\n                          {\r\n                            csdata.map((item, index) => {\r\n                              return (\r\n                                <option value={item.csId}>[{item.companyId}]- {item.csName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                      </CInputGroup>\r\n\r\n\r\n                    }\r\n\r\n                    {userinfo.grade === \"3\" &&\r\n\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 운수사</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"select\" id=\"companyId\" value={userinfo.vendorid} name=\"companyId1\" disabled=\"disabled\">\r\n                          <option value=\"0\" disabled=\"disabled\"> 운수사 선택 </option>\r\n                          {\r\n                            vendordata.map((item, index) => {\r\n\r\n                              return (\r\n                                <option value={item.companyId}>{item.companyName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText> 충전소</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect custom name=\"csId1\" id=\"csId\" value={userinfo.csid} onChange={e => change4(e)} disabled=\"disabled\">\r\n                          <option value=\"0\" disabled=\"disabled\"> ::: 선택하세요 :::</option>\r\n                          {\r\n                            csdata.map((item, index) => {\r\n                              return (\r\n                                <option value={item.csId}>[ {item.companyId} ] - {item.csName}</option>\r\n                              )\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                      </CInputGroup>\r\n\r\n                    }\r\n\r\n\r\n                    <br />\r\n                    <CFormGroup>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>노선번호</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"number\" id=\"routeno\" name=\"routeno1\" defaultValue={detaildata[0].routeno} readOnly={detaildata[0].routeno} />\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>노선명</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"routeno\" name=\"routename1\" defaultValue={detaildata[0].routename} />\r\n                      </CInputGroup>\r\n                    </CFormGroup>\r\n\r\n                    <CFormGroup>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>  출발지</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"startnodenm\" name=\"startnodenm1\" defaultValue={detaildata[0].startnodenm} />\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>  도착지</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"endnodenm\" name=\"endnodenm1\" defaultValue={detaildata[0].endnodenm} />\r\n                      </CInputGroup>\r\n                    </CFormGroup>\r\n\r\n                    <CFormGroup>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>  운행시도</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"text\" id=\"cityname\" name=\"cityname1\" defaultValue={detaildata[0].cityname} placeholder=\"도시이름\" />\r\n                      </CInputGroup>\r\n                    </CFormGroup>\r\n\r\n                    <CFormGroup className=\"form-actions\">\r\n                      <CButton type=\"button\" onClick={toggle} size=\"bg\" color=\"success\" style={{ width: \"100px\" }}>저장</CButton>\r\n                      &nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <CButton id=\"dateviewbtn\" style={{ display: \"none\" }} type=\"button\" onClick={deltoggle} size=\"bg\" color=\"danger\" style={{ width: \"100px\" }}>삭제</CButton>\r\n                      <CButton type=\"button\" onClick={setTableClose} size=\"bg\" color=\"success\" style={{ float: \"right\", width: \"100px\" }}>닫기</CButton>\r\n                    </CFormGroup>\r\n\r\n                  </CForm>\r\n                </CCardBody>\r\n              </div>\r\n            </CCard>\r\n\r\n          </CRow>\r\n\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lineinfo","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow\r\n} from '@coreui/react'\r\n\r\n\r\nconst Modals = (props) => {\r\n\r\n  const [modal, setModal] = useState(true)\r\n  const [large, setLarge] = useState(false)\r\n  const [small, setSmall] = useState(false)\r\n  const [primary, setPrimary] = useState(false)\r\n  const [success, setSuccess] = useState(false)\r\n  const [warning, setWarning] = useState(false)\r\n  const [danger, setDanger] = useState(false)\r\n  const [info, setInfo] = useState(false)\r\n  const [ermsg, setErmsg] = useState(\"Error !!\")\r\n  useEffect(() => {\r\n    if (props.data.mode === true) {\r\n      setWarning(!warning);\r\n    } else {\r\n      setWarning(warning);\r\n    }\r\n    setErmsg(\"<div style='padding-top:20px;'><span>\" + props.data.msg + \"</span></div>\")\r\n  }, [props]);\r\n\r\n  const setClose = () => {\r\n    props.fnc(false);\r\n    setWarning(!warning);\r\n  }\r\n\r\n  return (\r\n    <CModal\r\n      show={warning}\r\n      onClose={() => setWarning(!warning)}\r\n      color={props.data.color}\r\n    >\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>TOC System POPUP</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody id=\"txtmsg\" style={{ textAlign: 'center', paddingTop: \"30px\", paddingBottom: \"30px\" }} dangerouslySetInnerHTML={{ __html: ermsg }}>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        {props.mode === \"save\" && <CButton id=\"btn_modal_save\" color=\"warning\" onClick={() => props.handleClick()}>저장</CButton>}\r\n        {props.mode === \"del\" && <CButton id=\"btn_modal_del\" color=\"warning\" onClick={() => props.delClick()}>삭제</CButton>}\r\n        <CButton color=\"secondary\" onClick={() => setClose()}>닫기</CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n\r\n  )\r\n}\r\n\r\nexport default Modals"],"sourceRoot":""}