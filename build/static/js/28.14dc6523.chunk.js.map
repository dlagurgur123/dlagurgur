{"version":3,"sources":["views/contents/Report.js"],"names":["defaultValue","_id","vendorId","line_num","line_name","Report","fields1","key","_classes","_style","textAlign","isMobile","useCookies","cookies","configHeader","headers","Authorization","TocToken","useState","mode","msg","color","setModal","GV","vendorTablepagesize","pagesize","fields","moment","require","firstDate","setFirstDate","lastDate","setLastDate","meterValue","setSumMeter","totaltime","setTotalTime","reportcount","setReportCount","vendordata","setVendorData","csdata","setCsData","vendorIdvalue","setVendorIdvalue","csIdvalue","setCsIdvalue","items","setItems","setLoading","page","setPage","pages","setPages","itemsPerPage","setItemsPerPage","columnFilterValue","tableFilterValue","setTableFilterValue","sorterValue","setSorterValue","UTIL","userinfo","params","JSON","stringify","URLSearchParams","toString","useEffect","listdata","status","axios","post","process","then","result","grade","data","change4","catch","err","change2","e","target","value","handleClick","a","url","frmstrcsId","$","val","frmstrstartdate","frmstrenddate","alert","sendinfcreate","csId","startdate","enddate","totalPages","dur","result1","reduce","sum","currValue","meter","hour","hours","minute","minutes","second","seconds","d1","duration","d2","h","subtract","m","s","length","text","errmsg","hide","ExcelDownload","wb","Sheets","XLSX","json_to_sheet","docs","SheetNames","excelBuffer","bookType","type","Blob","date","Date","year","getFullYear","month","getMonth","day","getDate","getHours","min","getMinutes","sec","getSeconds","purchaseDay","saveAs","companyId","vendorid","id","style","width","position","float","widht","border","name","metghod","custom","onChange","change","map","item","index","companyName","disabled","csName","maxLength","csid","placeholder","readOnly","onClick","now","firstDate1","format","firstDate2","setDate","colSpan","paddingTop","class","className","fontSize","striped","onTableFilterChange","sorter","onSorterValueChange","onPaginationChange","scopedSlots","company_id","padding","cs_id","cp_id","connectorId","vehicle_id","id_tag","parseFloat","toFixed","price","meterStart","meterStop","starttimestamp","stoptimestamp","activePage","onActivePageChange"],"mappings":"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","file":"static/js/28.14dc6523.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CButton,\r\n  CInput,\r\n  CSelect, CPagination\r\n} from '@coreui/react'\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\nimport * as UTIL from 'src/util/Fnc'\r\nimport { useCookies } from 'react-cookie';\r\nimport GV from '../../globalSet'\r\nimport { isMobile } from 'react-device-detect';\r\nimport { saveAs } from \"file-saver\"; import * as XLSX from 'xlsx';\r\nimport { Day } from 'react-big-calendar';\r\n\r\n\r\nconst defaultValue = [{ _id: \"\", vendorId: \"\", line_num: \"\", line_name: \"\" }];\r\nconst Report = () => {\r\n\r\n  // 페이지내 글로벌 변수 정의  START:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\r\n  var fields1 = [{ key: '운수사', _classes: 'Tablefirst' }, { key: '충전소(충전기ID)', _classes: 'Tablefirst' }, { key: '충전건번호', _classes: 'Tablefirst' }, { key: '차량번호', _classes: 'Tablefirst' }, { key: '카드번호', _classes: 'Tablefirst' }, { key: '충전량(kwh)', _classes: 'Tablefirst' }, , { key: '충전요금(원)', _classes: 'Tablefirst' }, { key: '시작%', _classes: 'Tablefirst' }, { key: '종료%', _classes: 'Tablefirst' }, { key: '충전시작일시', _classes: 'Tablefirst', _style: { textAlign: \"center\" } }, { key: '충전종료일시', _classes: 'Tablefirst', _style: { textAlign: \"center\" } }, { key: '충전 시간', _classes: 'Tablefirst', _style: { textAlign: \"center\" } }]\r\n  if (isMobile) { fields1 = [{ key: '소속충전소', _classes: 'Tablefirst' }, { key: '시작전력', _classes: 'Tablefirst' }, { key: '종료전력', _classes: 'Tablefirst' }] }\r\n  var fields2 = [{ key: '운수사', _classes: 'Tablefirst' }, { key: '충전소(충전기ID)', _classes: 'Tablefirst' }, { key: '충전건번호', _classes: 'Tablefirst' }, { key: '시작전력', _classes: 'Tablefirst' }, { key: '종료전력', _classes: 'Tablefirst' }]\r\n  var fileds3 = [{ key: '기본정보', _classes: 'Tablefirst' }, { key: '충전정보', _classes: 'Tablefirst' }, { key: '충전 시간', _classes: 'Tablefirst' }]\r\n  if (isMobile) { fields2 = [{ key: '총 충전횟수', _classes: 'Tablefirst' }, { key: '총 충전시간', _classes: 'Tablefirst' }, { key: '총 소비전력', _classes: 'Tablefirst' }] }\r\n  const [cookies] = useCookies(['token']);  //Auth    \r\n  const configHeader = { headers: { Authorization: `Bearer ${cookies.TocToken}` } } // axios 전송을 위한 헤더값 세팅\r\n  const [warning, setModal] = useState({ mode: false, msg: \"\", color: \"info\" });    // 모달 팝업용\r\n  const [pagesize, setPageSize] = useState(GV.vendorTablepagesize);\r\n  const [fields, setFields] = useState(fields1)\r\n  const moment = require('moment');\r\n  // 페이지내 글로벌 변수 정의  END :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\r\n\r\n  const [firstDate, setFirstDate] = useState()\r\n  const [lastDate, setLastDate] = useState()\r\n  const [meterValue, setSumMeter] = useState(\"0\")\r\n  const [totaltime, setTotalTime] = useState(\"0시간0분0초\")\r\n  const [reportcount, setReportCount] = useState(\"0\")\r\n\r\n  const [data, setData] = useState([]);\r\n  const [detaildata, setDetailData] = useState(defaultValue);\r\n  const [vendordata, setVendorData] = useState([]);\r\n  const [csdata, setCsData] = useState([]);\r\n  const [vendorIdvalue, setVendorIdvalue] = useState(\"\");   // 사용자 추가시 벤더아이디 설정 \r\n  const [csIdvalue, setCsIdvalue] = useState(\"\");   // 사용자 추가시 벤더아이디 설정 \r\n  const [gradevalue, setGradevalue] = useState(\"\");   // 사용자 추가시 권한 설정\r\n  // 라이브 페이징을 위한 정의  START\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const [pages, setPages] = useState(5);\r\n  const [itemsPerPage, setItemsPerPage] = useState(20);\r\n  const [columnFilterValue, setColumnFilterValue] = useState();\r\n  const [tableFilterValue, setTableFilterValue] = useState(\"\");\r\n  const [sorterValue, setSorterValue] = useState();\r\n\r\n  const [userinfo] = useState(UTIL.getUserInfo(cookies))\r\n  const params = {\r\n    page,\r\n    columnFilterValue: JSON.stringify(columnFilterValue),\r\n    tableFilterValue,\r\n    sorterValue: JSON.stringify(sorterValue),\r\n    itemsPerPage\r\n  };\r\n  // 라이브 페이징을 위한 정의  END\r\n  const query = new URLSearchParams(params).toString();\r\n\r\n  //운수사 리스트\r\n  useEffect(() => {\r\n    let listdata = { status: 1, pagesize: pagesize }  // 리스트 출력 기본 세팅값 정의 \r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/vendorlist\", listdata, configHeader).then(result => {\r\n      if (userinfo.grade === \"0\") {\r\n        setLoading(false);\r\n        setVendorData(result.data.data)\r\n      } else {\r\n        change4()\r\n        setLoading(false);\r\n        setVendorData(result.data.data)\r\n      }\r\n\r\n\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }, [])\r\n\r\n  // 소속업체 선택시 소속 충전소 정보 호출하기\r\n  const change = (e) => {\r\n    setVendorIdvalue(e.target.value);\r\n    let listdata = { status: 1, pagesize: pagesize, companyId: e.target.value }  // 리스트 출력 기본 세팅값 정의 \r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n      setCsData(result.data.data)\r\n      $(\"#routeno\").hide();\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n\r\n  const change2 = (e) => {\r\n    setCsIdvalue(e.target.value)\r\n  }\r\n\r\n  const handleClick = async () => {\r\n    let url = \"/api/pages_report/reportlist\";\r\n\r\n    let frmstrcsId = $('#schform [name=\"csId\"]').val();\r\n    let frmstrstartdate = $('#schform [name=\"startdate\"]').val();\r\n    let frmstrenddate = $('#schform [name=\"enddate\"]').val();\r\n\r\n    if (frmstrcsId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 충전소를 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    if (frmstrstartdate === \"\" || frmstrenddate === \"\") {\r\n      alert('원활할 데이터 검색을 위해 검색 시작일과 종료일을 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    let sendinfcreate = {\r\n      csId: frmstrcsId,\r\n      startdate: frmstrstartdate,\r\n      enddate: frmstrenddate,\r\n      pagesize: GV.vendorTablepagesize,\r\n      page: page\r\n    }\r\n    //setSorterValue(sendinfcreate)\r\n    let params = {\r\n      page,\r\n      columnFilterValue: JSON.stringify(columnFilterValue),\r\n      tableFilterValue,\r\n      sorterValue: JSON.stringify(sendinfcreate),\r\n      itemsPerPage\r\n    };\r\n    let listdata = { status: 1, params: params }  // 리스트 출력 기본 세팅값 정의 \r\n    axios.post(process.env.REACT_APP_APISERVER + url, listdata, configHeader).then(result => {\r\n\r\n      if (result.data.status === 1) {\r\n        setItems(result.data.data);\r\n        setPages(result.data.data.totalPages);\r\n        setLoading(false);\r\n\r\n        //총 소비전력\r\n        const result1 = result.data.data.reduce(function (sum, currValue) {\r\n          return sum + currValue.meter;\r\n        }, 0);\r\n        // 총 충전 시간\r\n\r\n        let hour = result.data.data.reduce(function (hour, currValue) {\r\n          return hour + moment(currValue.totaltime).hours()\r\n        }, 0);\r\n\r\n        let minute = result.data.data.reduce(function (minute, currValue) {\r\n          return minute + moment(currValue.totaltime).minutes()\r\n        }, 0);\r\n\r\n        let second = result.data.data.reduce(function (second, currValue) {\r\n          return second + moment(currValue.totaltime).seconds()\r\n        }, 0);\r\n\r\n        var d1 = moment.duration({ seconds: second, minutes: minute, hours: hour });\r\n        var d2 = moment.duration({ seconds: 0, minutes: 0, hours: 0 });\r\n        var dur;\r\n        dur = d1.subtract(d2);\r\n        var h = dur.hours();\r\n        var m = dur.minutes();\r\n        var s = dur.seconds();\r\n\r\n        setTotalTime(h + \"시간\" + m + \"분\" + s + \"초\")\r\n        setReportCount(result.data.data.length)\r\n        setSumMeter(result1)\r\n\r\n      } else {\r\n\r\n        if (result.data.status === 9) {\r\n          $(\"#txtmsg\").text(JSON.stringify(result.data.errmsg[0].msg))\r\n          $(\"#btn_modal_save\").hide();\r\n        } else {\r\n          $(\"#txtmsg\").text(\"등록실패\")\r\n          $(\"#btn_modal_save\").hide();\r\n        }\r\n\r\n      }\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n\r\n  const ExcelDownload = async () => {\r\n    let url = \"/api/pages_report/reportlistexcel\";\r\n\r\n\r\n    let frmstrcompanyuId = $('#schform [name=\"companyId\"]').val();\r\n    let frmstrcsId = $('#schform [name=\"csId\"]').val();\r\n    let frmstrstartdate = $('#schform [name=\"startdate\"]').val();\r\n    let frmstrenddate = $('#schform [name=\"enddate\"]').val();\r\n\r\n    if (frmstrcsId === \"\") {\r\n      alert('원활할 데이터 검색을 위해 충전소를 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    if (frmstrstartdate === \"\" || frmstrenddate === \"\") {\r\n      alert('원활할 데이터 검색을 위해 검색 시작일과 종료일을 반드시 선택해주세요');\r\n      return;\r\n    }\r\n\r\n    let sendinfcreate = {\r\n      csId: frmstrcsId,\r\n      startdate: frmstrstartdate,\r\n      enddate: frmstrenddate,\r\n      pagesize: 1000000,\r\n      page: page\r\n    }\r\n\r\n    let params = {\r\n      page,\r\n      columnFilterValue: JSON.stringify(columnFilterValue),\r\n      tableFilterValue,\r\n      sorterValue: JSON.stringify(sendinfcreate),\r\n      itemsPerPage\r\n    };\r\n    let listdata = { status: 1, params: params }  // 리스트 출력 기본 세팅값 정의 \r\n    axios.post(process.env.REACT_APP_APISERVER + url, listdata, configHeader).then(result => {\r\n      //setSorterValue(sendinfcreate)\r\n      if (result.data.status === 1) {\r\n        // setItems(result.data.data.docs);\r\n\r\n        const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n        const fileExtension = \".xlsx\";\r\n        const ws = XLSX.utils.json_to_sheet(result.data.data.docs)\r\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        let date = new Date()\r\n        let year = date.getFullYear()\r\n        let month = date.getMonth() + 1\r\n        month = month >= 10 ? month : '0' + month\r\n        let day = date.getDate()\r\n        day = day >= 10 ? day : '0' + day\r\n        let hour = date.getHours()\r\n        hour = hour >= 10 ? hour : '0' + hour\r\n        let min = date.getMinutes()\r\n        let sec = date.getSeconds()\r\n        sec = sec >= 10 ? sec : '0' + sec\r\n\r\n        let purchaseDay = year + '' + month + '' + day + +hour + min + sec\r\n        saveAs(data, `file_${frmstrcsId}_${purchaseDay}${fileExtension}`);\r\n      } else {\r\n\r\n        alert('엑셀파일 생성 실패');\r\n      }\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n  const Monthdate1 = () => {\r\n    let now = new Date();\r\n    let firstDate, lastDate;\r\n    firstDate = new Date(now.getFullYear(), now.getMonth(), 1);\r\n    lastDate = new Date(now.getFullYear(), now.getMonth() + 1, 0);\r\n    let firstDate1 = moment(firstDate).format(\"YYYY-MM-DD\")\r\n    let firstDate2 = moment(lastDate).format(\"YYYY-MM-DD\")\r\n    setFirstDate(firstDate1)\r\n    setLastDate(firstDate2)\r\n  }\r\n\r\n  const Monthdate2 = () => {\r\n    let now = new Date();\r\n    let firstDate, lastDate;\r\n    firstDate = new Date(now.setDate(now.getDate() - 30));\r\n    lastDate = new Date();\r\n    let firstDate1 = moment(firstDate).format(\"YYYY-MM-DD\")\r\n    let firstDate2 = moment(lastDate).format(\"YYYY-MM-DD\")\r\n    setFirstDate(firstDate1)\r\n    setLastDate(firstDate2)\r\n  }\r\n\r\n  const Monthdate3 = () => {\r\n    let now = new Date();\r\n    let firstDate, lastDate;\r\n    firstDate = new Date(now.setDate(now.getDate() - 180));\r\n    lastDate = new Date();\r\n    let firstDate1 = moment(firstDate).format(\"YYYY-MM-DD\")\r\n    let firstDate2 = moment(lastDate).format(\"YYYY-MM-DD\")\r\n    setFirstDate(firstDate1)\r\n    setLastDate(firstDate2)\r\n  }\r\n\r\n  const Monthdate4 = () => {\r\n    let now = new Date();\r\n    let firstDate, lastDate;\r\n    firstDate = new Date(now.getFullYear(), 0);\r\n    lastDate = new Date(now.getFullYear() + 1, -1, 31);\r\n    let firstDate1 = moment(firstDate).format(\"YYYY-MM-DD\")\r\n    let firstDate2 = moment(lastDate).format(\"YYYY-MM-DD\")\r\n    setFirstDate(firstDate1)\r\n    setLastDate(firstDate2)\r\n  }\r\n\r\n  const change4 = (e) => {\r\n    if (userinfo.grade === \"0\") {\r\n      setVendorIdvalue(e.target.value)\r\n      let listdata = { status: 1, pagesize: pagesize, companyId: e.target.value }  // 리스트 출력 기본 세팅값 정의\r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n        setCsData(result.data.data)\r\n\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      })\r\n    } else {\r\n      let listdata = { status: 1, pagesize: pagesize, companyId: userinfo.vendorid }  // 리스트 출력 기본 세팅값 정의 \r\n      axios.post(process.env.REACT_APP_APISERVER + \"/api/pages_cp/cslist\", listdata, configHeader).then(result => {\r\n        setCsData(result.data.data)\r\n\r\n      }).catch(err => {\r\n        setModal(UTIL.api401chk(err));\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol>\r\n          <CRow>\r\n            <CCard id=\"listtable2\" style={{ width: \"100%\", position: \"relative\", float: \"left\" }}>\r\n              <CCardHeader>\r\n\r\n                <div style={{ widht: \"100%\", border: \"0px solid red\" }}>\r\n                  <form name=\"schform\" id=\"schform\" metghod=\"post\">\r\n                    <table style={{ widht: \"100%\", border: \"0px solid red\" }}>\r\n                      <tr>\r\n\r\n                        <td width=\"5%\">\r\n                          {userinfo.grade === \"0\" && <CSelect custom id=\"companyId\" style={{ width: \"100%\" }} value={vendorIdvalue} onChange={e => change(e)} name=\"companyId\">\r\n                            <option value=\"0\"> 운수사 선택 </option>\r\n                            {\r\n                              vendordata.map((item, index) => {\r\n                                return (\r\n                                  <option value={item.companyId} >{item.companyName}</option>\r\n                                )\r\n                              })\r\n                            }\r\n                          </CSelect>\r\n                          }\r\n\r\n                          {userinfo.grade === \"2\" && <CSelect custom id=\"companyId\" value={userinfo.vendorid} onChange={e => change4(e)} name=\"companyId\" disabled=\"disabled\">\r\n                            <option value=\"0\" disabled=\"disabled\"> 운수사 선택 </option>\r\n                            {\r\n                              vendordata.map((item, index) => {\r\n\r\n                                return (\r\n                                  <option value={item.companyId}>{item.companyName}</option>\r\n                                )\r\n                              })\r\n                            }\r\n                          </CSelect>\r\n                          }\r\n\r\n                          {userinfo.grade === \"3\" && <CSelect custom id=\"companyId\" value={userinfo.vendorid} onChange={e => change4(e)} name=\"companyId\" disabled=\"disabled\">\r\n                            <option value=\"0\" disabled=\"disabled\"> 운수사 선택 </option>\r\n                            {\r\n                              vendordata.map((item, index) => {\r\n\r\n                                return (\r\n                                  <option value={item.companyId}>{item.companyName}</option>\r\n                                )\r\n                              })\r\n                            }\r\n                          </CSelect>\r\n                          }\r\n\r\n                        </td>\r\n                        <td width=\"5%\">\r\n                          {userinfo.grade === \"0\" &&\r\n                            <CSelect custom name=\"csId\" id=\"csId\" style={{ width: \"100%\" }} value={csIdvalue} onChange={e => change2(e)}>\r\n                              <option value=\"0\"> ::: 선택하세요 :::</option>\r\n                              {\r\n                                csdata.map((item, index) => {\r\n                                  return (\r\n                                    <option value={item.csId}>[ {item.companyId} ] - {item.csName}</option>\r\n                                  )\r\n                                })\r\n                              }\r\n                            </CSelect>\r\n                          }\r\n                          {userinfo.grade === \"2\" &&\r\n                            <CSelect custom name=\"csId\" id=\"csId\" style={{ width: \"100%\" }} value={csIdvalue} onChange={e => change2(e)}>\r\n                              <option value=\"0\"> ::: 선택하세요 :::</option>\r\n                              {\r\n                                csdata.map((item, index) => {\r\n                                  return (\r\n                                    <option value={item.csId}>[ {item.companyId} ] - {item.csName}</option>\r\n                                  )\r\n                                })\r\n                              }\r\n                            </CSelect>\r\n                          }\r\n                          {userinfo.grade === \"3\" &&\r\n\r\n                            <CInput type=\"text\" id=\"csId\" maxLength=\"5\" name=\"csId\" value={userinfo.csid} placeholder=\"\" readOnly />\r\n                          }\r\n                        </td>\r\n\r\n                        <td width=\"10%\">\r\n                          <CButton color=\"info\" onClick={Monthdate1}>이번달</CButton>\r\n                          <CButton color=\"info\" onClick={Monthdate2}>1개월</CButton>\r\n                          <CButton color=\"info\" onClick={Monthdate3}>6개월</CButton>\r\n                          <CButton color=\"info\" onClick={Monthdate4}>올해</CButton>\r\n                        </td>\r\n\r\n                        <td width=\"1.5%\">시작일 :</td><td width=\"10%\"><CInput type=\"date\" value={firstDate} id=\"startdate\" name=\"startdate\" placeholder=\"date\" style={{ width: \"100%\" }} /></td>\r\n                        <td width=\"1.5%\">종료일 :</td><td width=\"10%\"> <CInput type=\"date\" value={lastDate} id=\"enddate\" name=\"enddate\" placeholder=\"date\" style={{ width: \"100%\" }} /></td>\r\n                      </tr>\r\n                      <tr><td colSpan=\"8\" style={{ width: \"100%\", textAlign: \"center\", paddingTop: \"15px\" }}>\r\n                        <CButton color=\"info\" style={{ width: \"90%\", float: \"center\" }} onClick={handleClick}>검색하기</CButton>\r\n                        <CButton color=\"danger\" style={{ width: \"150\", float: \"center\" }} onClick={ExcelDownload}>엑셀다운로드</CButton>\r\n                      </td></tr>\r\n                    </table>\r\n                  </form>\r\n                </div>\r\n\r\n              </CCardHeader>\r\n              <CCardBody style={{ textAlign: \"center\" }}>\r\n                <table class=\"table table-bordered\" id=\"123\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>총 충전횟수</th>\r\n                      <th>총 충전시간</th>\r\n                      <th>총 소비전력(kW/h)</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td><CBadge className=\"mr-1\" color=\"danger\" style={{ fontSize: \"18px\" }}>{reportcount}</CBadge></td>\r\n                      <td><CBadge className=\"mr-1\" color=\"danger\" style={{ fontSize: \"18px\" }}>{totaltime}</CBadge></td>\r\n                      <td><CBadge className=\"mr-1\" color=\"danger\" style={{ fontSize: \"18px\" }}>{meterValue}</CBadge></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n\r\n                <CDataTable\r\n                  class=\"table-light\"\r\n                  border\r\n                  items={items}\r\n                  fields={fields}\r\n                  striped\r\n                  tableFilterValue={tableFilterValue}\r\n                  onTableFilterChange={setTableFilterValue}\r\n                  sorter\r\n                  sorterValue={sorterValue}\r\n                  onSorterValueChange={setSorterValue}\r\n                  // itemsPerPageSelect={{ external: true }}\r\n                  itemsPerPage={itemsPerPage}\r\n                  onPaginationChange={setItemsPerPage}\r\n                  scopedSlots={{\r\n                    '운수사':\r\n                      (item) => (\r\n                        <td>\r\n                          {item.company_id}\r\n                        </td>\r\n                      ),\r\n                    '충전소(충전기ID)':\r\n                      (item) => (\r\n                        <td>\r\n                          <CBadge className=\"mr-1\" color=\"\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{item.cs_id}({item.cp_id})</CBadge>\r\n                        </td>\r\n                      ),\r\n                    '충전건번호':\r\n                      (item) => (\r\n                        <td>\r\n                          <CBadge className=\"mr-1\" color=\"\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{item.connectorId} </CBadge>\r\n                        </td>\r\n                      ),\r\n                    '차량번호':\r\n                      (item) => (\r\n                        <td>\r\n                          {item.vehicle_id}\r\n                        </td>\r\n                      ),\r\n                    '카드번호':\r\n                      (item) => (\r\n                        <td>\r\n                          {item.id_tag}\r\n                        </td>\r\n                      ),\r\n                    '충전량(kwh)':\r\n                      (item) => (\r\n                        <td>\r\n                          <CBadge className=\"mr-1\" color=\"\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{parseFloat(item.meter).toFixed(2)}kW/h</CBadge>\r\n                        </td>\r\n                      ),\r\n                    '충전요금(원)':\r\n                      (item) => (\r\n                        <td>\r\n                          <CBadge className=\"mr-1\" color=\"\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{parseFloat(item.price).toFixed(0)}원</CBadge>\r\n                        </td>\r\n                      ),\r\n                    '시작%':\r\n                      (item) => (\r\n                        <td>\r\n                          <CBadge className=\"mr-1\" color=\"\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{parseFloat(item.meterStart).toFixed(0)}%</CBadge>\r\n                        </td>\r\n                      ),\r\n                    '종료%':\r\n                      (item) => (\r\n                        <td>\r\n                          <CBadge className=\"mr-1\" color=\"\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{parseFloat(item.meterStop).toFixed(0)}%</CBadge>\r\n                        </td>\r\n                      ),\r\n                    '충전시작일시':\r\n                      (item) => (\r\n                        <td style={{ textAlign: \"center\" }}>\r\n                          <CBadge className=\"mr-1\" color=\"\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{moment(item.starttimestamp).format(\"YYYY-MM-DD HH:mm\")}</CBadge>\r\n                        </td>\r\n                      ),\r\n                    '충전종료일시':\r\n                      (item) => (\r\n                        <td style={{ textAlign: \"center\" }}>\r\n                          <CBadge className=\"mr-1\" color=\"\" style={{ padding: \"5px\", fontSize: \"13px\" }}> {moment(item.stoptimestamp).format(\"YYYY-MM-DD HH:mm\")}</CBadge>\r\n                        </td>\r\n\r\n                      ),\r\n                    '충전 시간':\r\n                      (item) => (\r\n                        <td style={{ textAlign: \"center\" }}>\r\n                          {moment(item.totaltime).format(\"HH시간 mm분 ss초\")}\r\n                        </td>\r\n\r\n                      )\r\n                  }}\r\n                />\r\n                <CPagination\r\n                  pages={pages}\r\n                  activePage={page}\r\n                  onActivePageChange={setPage}\r\n                  className={pages < 2 ? \"d-none\" : \"\"}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CRow>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Report"],"sourceRoot":""}