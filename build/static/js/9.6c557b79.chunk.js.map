{"version":3,"sources":["views/contents/SocketLogininfo.js","views/modals/Modals.js","reusable/CommonAxios.js"],"names":["defaultValue","_id","username","userId","phone","email","grade","status","password","Lineinfo","fields1","key","_classes","isMobile","fields2","useCookies","cookies","configHeader","headers","Authorization","TocToken","useState","mode","msg","color","warning","setModal","GV","vendorTablepagesize","pagesize","fields","setFields","setMode","data","setData","detaildata","setDetailData","vendordata","setVendorData","vendorIdvalue","setVendorIdvalue","gradevalue","setGradevalue","useEffect","getList","listdata","axios","post","process","then","result","catch","err","UTIL","handleClick","a","url","$","val","frmstruserId","frmstrvendorId","frmstrpassword","frmstrusername","frmstrgrade","frmstrpermission","frmstrphone","frmstremail","frmstatus","sendinfcreate","vendorId","permission","offdate","text","JSON","stringify","errmsg","hide","closemodal","fnc","id","style","width","position","float","paddingBottom","block","onClick","fadeOut","items","striped","sorter","itemsPerPage","pagination","vendorTablepagingsize","item","reset","fadeIn","getDetail","className","padding","fontSize","display","action","name","method","type","custom","value","onChange","e","target","change","map","index","name_kr","changeGrade","paddingLeft","marginTop","variant","inline","defaultChecked","htmlFor","readOnly","createdAt","updatedAt","txt","show","html","size","Modals","props","setWarning","ermsg","setErmsg","onClose","closeButton","textAlign","paddingTop","dangerouslySetInnerHTML","__html","delClick","ManagerGrade","SetGradeTxt","gradetxt"],"mappings":"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","file":"static/js/9.6c557b79.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CButton,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CSelect,\r\n  CSwitch,\r\n  CInputRadio,\r\n  CLabel\r\n} from '@coreui/react'\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\nimport * as UTIL from 'src/util/Fnc'\r\nimport { useCookies } from 'react-cookie';\r\nimport MODAL from '../modals/Modals';\r\nimport GV from '../../globalSet'\r\nimport { Vendorlist, ManagerGrade, SetGradeTxt } from 'src/reusable/CommonAxios'\r\nimport { isMobile } from 'react-device-detect';\r\n\r\n\r\nconst defaultValue = [{ _id: \"\", username: \"\", userId: \"\", phone: \"\", email: \"\", grade: \"\", status: 1, password: \"\" }];\r\nconst Lineinfo = () => {\r\n\r\n  // 페이지내 글로벌 변수 정의  START:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\r\n  var fields1 = [{ key: '이름', _classes: 'Tablefirst' }, { key: '업체코드', _classes: 'Tablefirst' }, { key: '연락처', _classes: 'Tablefirst' }, { key: '권한', _classes: 'Tablefirst' }, { key: '상태', _classes: 'Tablefirst' }]\r\n  if (isMobile) { fields1 = [{ key: '이름', _classes: 'Tablefirst' }, { key: '업체코드', _classes: 'Tablefirst' }, { key: '권한', _classes: 'Tablefirst' }] }\r\n  var fields2 = [{ key: '이름', _classes: 'Tablefirst' }, { key: '업체코드', _classes: 'Tablefirst' }, { key: '연락처', _classes: 'Tablefirst' }, { key: '권한', _classes: 'Tablefirst' }, { key: '상태', _classes: 'Tablefirst' }]\r\n  if (isMobile) { fields2 = [{ key: '이름', _classes: 'Tablefirst' }, { key: '업체코드', _classes: 'Tablefirst' }, { key: '권한', _classes: 'Tablefirst' }] }\r\n  const [cookies] = useCookies(['token']);  //Auth    \r\n  const configHeader = { headers: { Authorization: `Bearer ${cookies.TocToken}` } } // axios 전송을 위한 헤더값 세팅\r\n  const [warning, setModal] = useState({ mode: false, msg: \"\", color: \"info\" });    // 모달 팝업용\r\n  const [pagesize, setPageSize] = useState(GV.vendorTablepagesize);\r\n  const [fields, setFields] = useState(fields1)\r\n  const [mode, setMode] = useState(\"alert\");\r\n\r\n  // 페이지내 글로벌 변수 정의  END :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\r\n\r\n  const [data, setData] = useState([]);\r\n  const [detaildata, setDetailData] = useState(defaultValue);\r\n  const [vendordata, setVendorData] = useState([]);\r\n  const [vendorIdvalue, setVendorIdvalue] = useState(\"\");   // 사용자 추가시 벤더아이디 설정 \r\n  const [gradevalue, setGradevalue] = useState(\"\");   // 사용자 추가시 권한 설정\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n\r\n  // 사용자 리스트 호출 함수 \r\n  const getList = () => {\r\n    let listdata = { status: 1, pagesize: GV.vendorTablepagesize }  // 리스트 출력 기본 세팅값 정의 \r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/managerlist\", listdata, configHeader).then(result => {\r\n      setData(result.data.data)\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    });\r\n  }\r\n\r\n  //d운수사 리스트\r\n  useEffect(() => {\r\n    let listdata = { status: 1, pagesize: pagesize }  // 리스트 출력 기본 세팅값 정의 \r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/vendorlist\", listdata, configHeader).then(result => {\r\n      setVendorData(result.data.data)\r\n    }).catch(err => {\r\n\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }, [])\r\n\r\n  // 운수사 상세정보 호출 함수\r\n  const getDetail = (_id) => {\r\n    closemodal();\r\n    $(\"#frmadd\")[0].reset();\r\n    let listdata = { _id: _id }\r\n    axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/managerdetail\", listdata, configHeader).then(result => {\r\n      setDetailData(result.data.data);\r\n      setVendorIdvalue(result.data.data[0].vendorId)\r\n      setGradevalue(result.data.data[0].grade)\r\n      // 상세정보 호출시 입력화면에 쓰기 및 애니메이션 처리  ---------\r\n      UTIL.writeani('open')\r\n      $(\"#dateview\").fadeIn();\r\n      // 상세정보 호출시 입력화면에 쓰기 및 애니메이션 처리  ---------\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    });\r\n  }\r\n\r\n  const handleClick = async () => {\r\n\r\n    let txt = \"\";\r\n    let url = \"/api/pages/updatmanager\";\r\n\r\n    if ($('#frmadd [name=\"id\"]').val()) {\r\n      txt = \"수정\";\r\n      url = \"/api/pages/updatemanager/\" + $('#frmadd [name=\"id\"]').val();\r\n    } else {\r\n      txt = \"등록\";\r\n      url = \"/api/pages/insertmanager\";\r\n    }\r\n\r\n    let frmstruserId = $('#frmadd [name=\"userId\"]').val();\r\n    let frmstrvendorId = $('#frmadd [name=\"vendorId\"]').val();\r\n    let frmstrpassword = $('#frmadd [name=\"password\"]').val();\r\n    let frmstrusername = $('#frmadd [name=\"username\"]').val();\r\n    let frmstrgrade = $('#frmadd [name=\"grade\"]').val();\r\n    let frmstrpermission = $('#frmadd [name=\"permission\"]').val();\r\n    let frmstrphone = $('#frmadd [name=\"phone\"]').val();\r\n    let frmstremail = $('#frmadd [name=\"email\"]').val();\r\n    let frmstatus = $(\"input[name='status']:checked\").val();\r\n    let sendinfcreate = {\r\n      vendorId: frmstrvendorId,\r\n      userId: frmstruserId,\r\n      password: frmstrpassword,\r\n      grade: frmstrgrade,\r\n      permission: frmstrpermission,\r\n      username: frmstrusername,\r\n      email: frmstremail,\r\n      phone: frmstrphone,\r\n      offdate: \"\",\r\n      status: frmstatus,\r\n      pagesize: GV.vendorTablepagesize\r\n    }\r\n\r\n    axios.post(process.env.REACT_APP_APISERVER + url, sendinfcreate, configHeader).then(result => {\r\n\r\n      if (result.data.status === 1) {\r\n        getList();\r\n\r\n        //$(\"#frmadd input\").val(\"\");  // 입력박스  Reset\r\n        //$(\"#listtable2\").animate({left:\"-10px\"},300, function() {$(\"#listtable2\").animate({left:\"10px\"},100) })\r\n      } else {\r\n\r\n        if (result.data.status === 9) {\r\n          $(\"#txtmsg\").text(JSON.stringify(result.data.errmsg[0].msg))\r\n          $(\"#btn_modal_save\").hide();\r\n          //setErrmsg(result.data.errmsg[0].msg)\r\n        } else {\r\n          $(\"#txtmsg\").text(\"등록실패\")\r\n          $(\"#btn_modal_save\").hide();\r\n        }\r\n\r\n      }\r\n    }).catch(err => {\r\n      setModal(UTIL.api401chk(err));\r\n    })\r\n  }\r\n\r\n  const openmodal = () => {\r\n    let txt = \"\";\r\n    let url = \"\";\r\n    setMode('save'); $(\"#btn_modal_save\").show(); $(\"#txtmsg\").html(\"저장하시겠습니까?\");\r\n    if ($('#frmadd [name=\"id\"]').val()) { txt = \"수정\"; } else { txt = \"등록\"; }\r\n    setModal(UTIL.modalopen('사용자 정보를 ' + txt + '하시겠습니까?', 'danger'))\r\n  }\r\n  const closemodal = () => {\r\n    setModal(false);\r\n  }\r\n  // 입력폼 표시 애니메이션 처리\r\n  const setTableOpen = () => {\r\n    setModal(false);\r\n    setDetailData(defaultValue)\r\n    $(\"#frmadd input\").val(\"\");\r\n    $(\"#dateview\").fadeOut();\r\n    setFields(fields2);\r\n    UTIL.writeani('open')\r\n  }\r\n  // 입력폼 닫기 애니메이션 처리\r\n  const setTableClose = () => {\r\n    setModal(false);\r\n    UTIL.writeani('close')\r\n    setFields(fields1);\r\n  }\r\n\r\n  const change = (e) => { setVendorIdvalue(e.target.value) }    // 벤더사 선택시 state 변경 \r\n  const changeGrade = (e) => { setGradevalue(e.target.value) }  // 권한 선택시 state 변경\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol>\r\n          <MODAL data={warning} fnc={closemodal} mode={mode} handleClick={handleClick}></MODAL>\r\n          <CRow>\r\n\r\n            <CCard id=\"listtable2\" style={{ width: \"100%\", position: \"relative\", float: \"left\" }}>\r\n              <CCardHeader>\r\n                버스 리스트\r\n                <div style={{ paddingBottom: \"5px\", float: \"right\" }}>\r\n                  <CButton block color=\"info\" onClick={setTableOpen}>버스등록</CButton>\r\n                </div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <CDataTable\r\n\r\n                  items={data}\r\n                  fields={fields}\r\n                  striped\r\n                  sorter\r\n                  itemsPerPage={pagesize}\r\n                  pagination\r\n                  itemsPerPage={GV.vendorTablepagingsize}\r\n                  clickableRows\r\n                  onRowClick={(item) => getDetail(item._id)}\r\n                  scopedSlots={{\r\n                    '이름':\r\n                      (item) => (\r\n                        <td >\r\n                          {/* {item.status === 1 && <CBadge className=\"mr-1\" color=\"primary\" style={{padding:\"5px\",fontSize:\"13px\"}}>{item.name_kr}</CBadge> }\r\n                          {item.status === 0 && <CBadge className=\"mr-1\" color=\"dark\" style={{padding:\"5px\",fontSize:\"13px\"}}>{item.name_kr}</CBadge> } */}\r\n                          {item.username}\r\n                        </td>\r\n                      ),\r\n                    '업체코드':\r\n                      (item) => (\r\n                        <td>\r\n                          {item.status === 1 && <CBadge className=\"mr-1\" color=\"info\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{item.vendorId}</CBadge>}\r\n                          {item.status === 0 && <CBadge className=\"mr-1\" color=\"dark\" style={{ padding: \"5px\", fontSize: \"13px\" }}>{item.vendorId}</CBadge>}\r\n                        </td>\r\n                      ),\r\n                    '연락처':\r\n                      (item) => (\r\n                        <td>{item.phone}</td>\r\n                      ),\r\n                    '권한':\r\n                      (item) => (\r\n                        <td>\r\n                          <SetGradeTxt grade={item.grade} />\r\n                        </td>\r\n                      ),\r\n                    '상태':\r\n                      (item) => (\r\n                        <td>\r\n                          {item.status === 1 && <CBadge className=\"mr-1\" color=\"warning\" style={{ padding: \"5px\", fontSize: \"13px\" }}>등록중</CBadge>}\r\n                          {item.status === 0 && <CBadge className=\"mr-1\" color=\"dark\" style={{ padding: \"5px\", fontSize: \"13px\" }}>삭제됨</CBadge>}\r\n                        </td>\r\n                      )\r\n                  }}\r\n                />\r\n              </CCardBody>\r\n            </CCard>\r\n\r\n\r\n            <CCard id=\"writefrm\" style={{ width: \"45%\", position: \"relative\", float: \"left\", display: \"none\" }}>\r\n              <CCardHeader>\r\n                사용자정보 입력\r\n              </CCardHeader>\r\n              <CCardBody>\r\n                <CForm action=\"\" name=\"frmadd\" id=\"frmadd\" method=\"post\">\r\n                  <input type=\"hidden\" name=\"id\" id=\"id\" defaultValue={detaildata[0]._id} />\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> * 소속업체</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CSelect custom name=\"select\" id=\"vendorId\" value={vendorIdvalue} onChange={e => change(e)} name=\"vendorId\">\r\n                        <option value=\"0\"> ::: 선택하세요 :::</option>\r\n                        {\r\n                          vendordata.map((item, index) => {\r\n                            var a = detaildata[0].vendorId === item.vendorId ? ' selected' : ''\r\n                            return (\r\n                              <option value={item.vendorId}>{item.name_kr}</option>\r\n                            )\r\n                          })\r\n                        }\r\n                      </CSelect>\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> * 사용자아이디</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" id=\"userId\" name=\"userId\" defaultValue={detaildata[0].userId} />\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> * 비밀번호</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"password\" id=\"password\" name=\"password\" defaultValue={detaildata[0].password} />\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> * 사용자이름</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" id=\"username\" name=\"username\" defaultValue={detaildata[0].username} />\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> * 권한</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <ManagerGrade grade={gradevalue} changeGrade={changeGrade} />\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>연락처</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"text\" id=\"phone\" name=\"phone\" defaultValue={detaildata[0].phone} />\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>이메일</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput type=\"email\" id=\"email\" name=\"email\" defaultValue={detaildata[0].email} />\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n                  <CFormGroup>\r\n                    <CInputGroup>\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText> * 상태정보</CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <div style={{ paddingLeft: \"10px\", marginTop: \"5px\" }}>\r\n                        <CFormGroup variant=\"custom-radio\" inline>\r\n                          {detaildata[0].status === 1 && <CInputRadio custom id=\"status1\" name=\"status\" value=\"1\" defaultChecked />}\r\n                          {detaildata[0].status === 0 && <CInputRadio custom id=\"status1\" name=\"status\" value=\"1\" />}\r\n                          <CLabel variant=\"custom-checkbox\" htmlFor=\"status1\">등록중</CLabel>\r\n                        </CFormGroup>\r\n                        <CFormGroup variant=\"custom-radio\" inline>\r\n                          {detaildata[0].status === 1 && <CInputRadio custom id=\"status2\" name=\"status\" value=\"0\" />}\r\n                          {detaildata[0].status === 0 && <CInputRadio custom id=\"status2\" name=\"status\" value=\"0\" defaultChecked />}\r\n                          <CLabel variant=\"custom-checkbox\" htmlFor=\"status2\">삭제중</CLabel>\r\n                        </CFormGroup>\r\n                      </div>\r\n                    </CInputGroup>\r\n                  </CFormGroup>\r\n                  <div id=\"dateview\" style={{ display: \"none\" }}>\r\n                    <CFormGroup>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>최초  등록일</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"email\" id=\"email\" readOnly name=\"email\" defaultValue={detaildata[0].createdAt} />\r\n                      </CInputGroup>\r\n                    </CFormGroup>\r\n                    <CFormGroup>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>마지막수정일</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput type=\"email\" id=\"email\" readOnly name=\"email\" defaultValue={detaildata[0].updatedAt} />\r\n                      </CInputGroup>\r\n                    </CFormGroup>\r\n                  </div>\r\n                  <CFormGroup className=\"form-actions\">\r\n                    <CButton type=\"button\" onClick={openmodal} size=\"bg\" color=\"success\" style={{ width: \"100px\" }}>저장</CButton>\r\n                    <CButton type=\"button\" onClick={setTableClose} size=\"bg\" color=\"success\" style={{ float: \"right\", width: \"100px\" }}>닫기</CButton>\r\n                  </CFormGroup>\r\n\r\n                </CForm>\r\n              </CCardBody>\r\n            </CCard>\r\n\r\n          </CRow>\r\n\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lineinfo","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow\r\n} from '@coreui/react'\r\n\r\n\r\nconst Modals = (props) => {\r\n\r\n  const [modal, setModal] = useState(true)\r\n  const [large, setLarge] = useState(false)\r\n  const [small, setSmall] = useState(false)\r\n  const [primary, setPrimary] = useState(false)\r\n  const [success, setSuccess] = useState(false)\r\n  const [warning, setWarning] = useState(false)\r\n  const [danger, setDanger] = useState(false)\r\n  const [info, setInfo] = useState(false)\r\n  const [ermsg, setErmsg] = useState(\"Error !!\")\r\n  useEffect(() => {\r\n    if (props.data.mode === true) {\r\n      setWarning(!warning);\r\n    } else {\r\n      setWarning(warning);\r\n    }\r\n    setErmsg(\"<div style='padding-top:20px;'><span>\" + props.data.msg + \"</span></div>\")\r\n  }, [props]);\r\n\r\n  const setClose = () => {\r\n    props.fnc(false);\r\n    setWarning(!warning);\r\n  }\r\n\r\n  return (\r\n    <CModal\r\n      show={warning}\r\n      onClose={() => setWarning(!warning)}\r\n      color={props.data.color}\r\n    >\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>TOC System POPUP</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody id=\"txtmsg\" style={{ textAlign: 'center', paddingTop: \"30px\", paddingBottom: \"30px\" }} dangerouslySetInnerHTML={{ __html: ermsg }}>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        {props.mode === \"save\" && <CButton id=\"btn_modal_save\" color=\"warning\" onClick={() => props.handleClick()}>저장</CButton>}\r\n        {props.mode === \"del\" && <CButton id=\"btn_modal_del\" color=\"warning\" onClick={() => props.delClick()}>삭제</CButton>}\r\n        <CButton color=\"secondary\" onClick={() => setClose()}>닫기</CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n\r\n  )\r\n}\r\n\r\nexport default Modals","import axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nimport { CSelect } from '@coreui/react'\r\nimport GV from '../globalSet'\r\n\r\nexport const Vendorlist = (props) => {\r\n\r\n    const [data, setData] = useState(\"\");\r\n    // 페이지내 글로벌 변수 정의  START:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::    \r\n    const [pagesize, setPageSize] = useState(GV.vendorTablepagesize);\r\n    // 페이지내 글로벌 변수 정의  END :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::\r\n\r\n    useEffect(() => {\r\n        let listdata = { status: 1, pagesize: pagesize }  // 리스트 출력 기본 세팅값 정의 \r\n        axios.post(process.env.REACT_APP_APISERVER + \"/api/pages/vendorlist\", listdata, props.header.headers).then(result => {\r\n            console.log(result)\r\n            console.log(2)\r\n            setData(result.data.data)\r\n        }).catch(err => {\r\n            console.log(1)\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <CSelect custom name=\"select\" id=\"vendorid\" name=\"vendorid\">\r\n            <option value=\"0\">Please select</option>\r\n            {\r\n                data.map((item, index) => {\r\n                    <option value=\"0\">{item.name_kr}</option>\r\n                })\r\n            }\r\n        </CSelect>\r\n    );\r\n}\r\n\r\nexport const ManagerGrade = (props) => {\r\n    const [data, setData] = useState(\"\");\r\n    return (\r\n        <CSelect custom name=\"select\" value={props.grade} onChange={e => props.changeGrade(e)} id=\"grade\" name=\"grade\">\r\n            <option value=\"3\">Monitor</option>\r\n            <option value=\"2\">Vendor</option>\r\n            <option value=\"1\">Admin</option>\r\n            <option value=\"0\">Super</option>\r\n        </CSelect>\r\n    );\r\n}\r\n\r\n\r\nexport const SetGradeTxt = (props) => {\r\n    let gradetxt = \"\";\r\n    switch (props.grade) {\r\n        case \"0\":\r\n            gradetxt = \"Super\";\r\n            break;\r\n        case \"1\":\r\n            gradetxt = \"Admin\";\r\n            break;\r\n        case \"2\":\r\n            gradetxt = \"Vendor\";\r\n            break;\r\n        case \"3\":\r\n            gradetxt = \"Monitor\";\r\n            break;\r\n        default:\r\n            gradetxt = \"Monitor\";\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div>{gradetxt}</div>\r\n    )\r\n}"],"sourceRoot":""}